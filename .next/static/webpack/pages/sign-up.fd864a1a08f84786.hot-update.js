"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/sign-up",{

/***/ "./pages/sign-up.tsx":
/*!***************************!*\
  !*** ./pages/sign-up.tsx ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ SignUpPage; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_daisyui__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-daisyui */ \"./node_modules/react-daisyui/dist/react-daisyui.modern.js\");\n/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-hook-form */ \"./node_modules/react-hook-form/dist/index.esm.mjs\");\n\nvar _s = $RefreshSig$();\n\n\nfunction SignUpPage() {\n    _s();\n    const { register , handleSubmit , watch , formState: { errors  }  } = (0,react_hook_form__WEBPACK_IMPORTED_MODULE_1__.useForm)();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            display: \"flex\",\n            flexFlow: \"column\",\n            gap: 15,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            height: \"100vh\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                children: \"Sign up form\"\n            }, void 0, false, {\n                fileName: \"/Users/andremacbook/Desktop/z/z_nextjs_zod/pages/sign-up.tsx\",\n                lineNumber: 23,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"form-control w-full max-w-xs\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                        htmlFor: \"email\",\n                        className: \"lablel\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"label-text\",\n                            children: \"email\"\n                        }, void 0, false, {\n                            fileName: \"/Users/andremacbook/Desktop/z/z_nextjs_zod/pages/sign-up.tsx\",\n                            lineNumber: 26,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/andremacbook/Desktop/z/z_nextjs_zod/pages/sign-up.tsx\",\n                        lineNumber: 25,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_daisyui__WEBPACK_IMPORTED_MODULE_2__.Input, {\n                        color: \"ghost\",\n                        id: \"email\",\n                        type: \"text\"\n                    }, void 0, false, {\n                        fileName: \"/Users/andremacbook/Desktop/z/z_nextjs_zod/pages/sign-up.tsx\",\n                        lineNumber: 29,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"label-text text-error\",\n                        children: \"Error\"\n                    }, void 0, false, {\n                        fileName: \"/Users/andremacbook/Desktop/z/z_nextjs_zod/pages/sign-up.tsx\",\n                        lineNumber: 30,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/andremacbook/Desktop/z/z_nextjs_zod/pages/sign-up.tsx\",\n                lineNumber: 24,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/andremacbook/Desktop/z/z_nextjs_zod/pages/sign-up.tsx\",\n        lineNumber: 13,\n        columnNumber: 5\n    }, this);\n}\n_s(SignUpPage, \"+LcrTzTax1ndAePIwZBfPwbnP68=\", false, function() {\n    return [\n        react_hook_form__WEBPACK_IMPORTED_MODULE_1__.useForm\n    ];\n});\n_c = SignUpPage;\nvar _c;\n$RefreshReg$(_c, \"SignUpPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9zaWduLXVwLnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOztBQUFxQztBQUNJO0FBRTFCLFNBQVNFLGFBQWE7O0lBQ25DLE1BQU0sRUFDSkMsU0FBUSxFQUNSQyxhQUFZLEVBQ1pDLE1BQUssRUFDTEMsV0FBVyxFQUFFQyxPQUFNLEVBQUUsR0FDdEIsR0FBR04sd0RBQU9BO0lBRVgscUJBQ0UsOERBQUNPO1FBQ0NDLE9BQU87WUFDTEMsU0FBUztZQUNUQyxVQUFVO1lBQ1ZDLEtBQUs7WUFDTEMsWUFBWTtZQUNaQyxnQkFBZ0I7WUFDaEJDLFFBQVE7UUFDVjs7MEJBRUEsOERBQUNDOzBCQUFHOzs7Ozs7MEJBQ0osOERBQUNSO2dCQUFJUyxXQUFVOztrQ0FDYiw4REFBQ0M7d0JBQU1DLFNBQVM7d0JBQVNGLFdBQVU7a0NBQ2pDLDRFQUFDRzs0QkFBS0gsV0FBVTtzQ0FBYTs7Ozs7Ozs7Ozs7a0NBRy9CLDhEQUFDakIsZ0RBQUtBO3dCQUFDcUIsT0FBTzt3QkFBU0MsSUFBSTt3QkFBU0MsTUFBTTs7Ozs7O2tDQUMxQyw4REFBQ0g7d0JBQUtILFdBQVU7a0NBQXdCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFJaEQsQ0FBQztHQTlCdUJmOztRQU1sQkQsb0RBQU9BOzs7S0FOV0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvc2lnbi11cC50c3g/YmY3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnB1dCB9IGZyb20gJ3JlYWN0LWRhaXN5dWknXG5pbXBvcnQgeyB1c2VGb3JtIH0gZnJvbSAncmVhY3QtaG9vay1mb3JtJ1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTaWduVXBQYWdlKCkge1xuICBjb25zdCB7XG4gICAgcmVnaXN0ZXIsXG4gICAgaGFuZGxlU3VibWl0LFxuICAgIHdhdGNoLFxuICAgIGZvcm1TdGF0ZTogeyBlcnJvcnMgfSxcbiAgfSA9IHVzZUZvcm0oKVxuXG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgc3R5bGU9e3tcbiAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICBmbGV4RmxvdzogJ2NvbHVtbicsXG4gICAgICAgIGdhcDogMTUsXG4gICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgICAgIGhlaWdodDogJzEwMHZoJyxcbiAgICAgIH19XG4gICAgPlxuICAgICAgPGgyPlNpZ24gdXAgZm9ybTwvaDI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZvcm0tY29udHJvbCB3LWZ1bGwgbWF4LXcteHNcIj5cbiAgICAgICAgPGxhYmVsIGh0bWxGb3I9eydlbWFpbCd9IGNsYXNzTmFtZT1cImxhYmxlbFwiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImxhYmVsLXRleHRcIj5lbWFpbDwvc3Bhbj5cbiAgICAgICAgPC9sYWJlbD5cblxuICAgICAgICA8SW5wdXQgY29sb3I9eydnaG9zdCd9IGlkPXsnZW1haWwnfSB0eXBlPXsndGV4dCd9IC8+XG4gICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImxhYmVsLXRleHQgdGV4dC1lcnJvclwiPkVycm9yPC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIClcbn1cbiJdLCJuYW1lcyI6WyJJbnB1dCIsInVzZUZvcm0iLCJTaWduVXBQYWdlIiwicmVnaXN0ZXIiLCJoYW5kbGVTdWJtaXQiLCJ3YXRjaCIsImZvcm1TdGF0ZSIsImVycm9ycyIsImRpdiIsInN0eWxlIiwiZGlzcGxheSIsImZsZXhGbG93IiwiZ2FwIiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50IiwiaGVpZ2h0IiwiaDIiLCJjbGFzc05hbWUiLCJsYWJlbCIsImh0bWxGb3IiLCJzcGFuIiwiY29sb3IiLCJpZCIsInR5cGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/sign-up.tsx\n"));

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-runtime.development.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-runtime.development.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n// even with the prod transform. This means that jsxDEV is purely\n// opt-in behavior for better messages but that we won't stop\n// giving you warnings if you use production apis.\n\nfunction jsxWithValidationStatic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, true);\n  }\n}\nfunction jsxWithValidationDynamic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, false);\n  }\n}\n\nvar jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\n\nvar jsxs =  jsxWithValidationStatic ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsx;\nexports.jsxs = jsxs;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-runtime.development.js\n"));

/***/ }),

/***/ "./node_modules/react/jsx-runtime.js":
/*!*******************************************!*\
  !*** ./node_modules/react/jsx-runtime.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LXJ1bnRpbWUuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixFQUFFLCtJQUFrRTtBQUNwRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LXJ1bnRpbWUuanM/MzRkMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LXJ1bnRpbWUuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-runtime.js\n"));

/***/ }),

/***/ "./node_modules/react-daisyui/dist/react-daisyui.modern.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react-daisyui/dist/react-daisyui.modern.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Alert\": function() { return /* binding */ Alert; },\n/* harmony export */   \"Artboard\": function() { return /* binding */ Artboard; },\n/* harmony export */   \"Avatar\": function() { return /* binding */ Avatar$1; },\n/* harmony export */   \"Badge\": function() { return /* binding */ Badge; },\n/* harmony export */   \"BottomNavigation\": function() { return /* binding */ BottomNavigation$1; },\n/* harmony export */   \"Breadcrumbs\": function() { return /* binding */ Breadcrumbs$1; },\n/* harmony export */   \"Button\": function() { return /* binding */ Button; },\n/* harmony export */   \"ButtonGroup\": function() { return /* binding */ ButtonGroup; },\n/* harmony export */   \"Card\": function() { return /* binding */ Card$1; },\n/* harmony export */   \"Carousel\": function() { return /* binding */ Carousel$1; },\n/* harmony export */   \"ChatBubble\": function() { return /* binding */ ChatBubble$1; },\n/* harmony export */   \"Checkbox\": function() { return /* binding */ Checkbox; },\n/* harmony export */   \"CodeMockup\": function() { return /* binding */ CodeMockupNamespace; },\n/* harmony export */   \"Collapse\": function() { return /* binding */ Collapse$1; },\n/* harmony export */   \"Countdown\": function() { return /* binding */ Countdown; },\n/* harmony export */   \"Divider\": function() { return /* binding */ Divider; },\n/* harmony export */   \"Drawer\": function() { return /* binding */ Drawer; },\n/* harmony export */   \"Dropdown\": function() { return /* binding */ Dropdown$1; },\n/* harmony export */   \"FileInput\": function() { return /* binding */ FileInput; },\n/* harmony export */   \"Footer\": function() { return /* binding */ Footer$1; },\n/* harmony export */   \"Form\": function() { return /* binding */ Form$1; },\n/* harmony export */   \"Hero\": function() { return /* binding */ Hero$1; },\n/* harmony export */   \"Indicator\": function() { return /* binding */ Indicator; },\n/* harmony export */   \"Input\": function() { return /* binding */ Input; },\n/* harmony export */   \"InputGroup\": function() { return /* binding */ InputGroup; },\n/* harmony export */   \"Kbd\": function() { return /* binding */ Kbd; },\n/* harmony export */   \"Link\": function() { return /* binding */ Link; },\n/* harmony export */   \"Mask\": function() { return /* binding */ Mask; },\n/* harmony export */   \"Menu\": function() { return /* binding */ Menu$1; },\n/* harmony export */   \"Modal\": function() { return /* binding */ Modal$1; },\n/* harmony export */   \"Navbar\": function() { return /* binding */ Navbar$1; },\n/* harmony export */   \"Pagination\": function() { return /* binding */ Pagination; },\n/* harmony export */   \"PhoneMockup\": function() { return /* binding */ PhoneMockup; },\n/* harmony export */   \"Progress\": function() { return /* binding */ Progress; },\n/* harmony export */   \"RadialProgress\": function() { return /* binding */ RadialProgress; },\n/* harmony export */   \"Radio\": function() { return /* binding */ Radio; },\n/* harmony export */   \"Range\": function() { return /* binding */ Range; },\n/* harmony export */   \"Rating\": function() { return /* binding */ Rating$1; },\n/* harmony export */   \"Select\": function() { return /* binding */ Select$1; },\n/* harmony export */   \"Stack\": function() { return /* binding */ Stack; },\n/* harmony export */   \"Stats\": function() { return /* binding */ Stats$1; },\n/* harmony export */   \"Steps\": function() { return /* binding */ Steps$1; },\n/* harmony export */   \"Swap\": function() { return /* binding */ Swap; },\n/* harmony export */   \"Table\": function() { return /* binding */ Table$1; },\n/* harmony export */   \"Tabs\": function() { return /* binding */ Tabs$1; },\n/* harmony export */   \"Textarea\": function() { return /* binding */ Textarea; },\n/* harmony export */   \"Theme\": function() { return /* binding */ Theme; },\n/* harmony export */   \"Toast\": function() { return /* binding */ Toast; },\n/* harmony export */   \"Toggle\": function() { return /* binding */ Toggle; },\n/* harmony export */   \"Tooltip\": function() { return /* binding */ Tooltip; },\n/* harmony export */   \"WindowMockup\": function() { return /* binding */ WindowMockup; },\n/* harmony export */   \"useTheme\": function() { return /* binding */ useTheme; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n\n\nfunction _extends$1() {\n  _extends$1 = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends$1.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nfunction clsx () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x;\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar hashlru = function (max) {\n\n  if (!max) throw Error('hashlru must have a max value, of type number, greater than 0')\n\n  var size = 0, cache = Object.create(null), _cache = Object.create(null);\n\n  function update (key, value) {\n    cache[key] = value;\n    size ++;\n    if(size >= max) {\n      size = 0;\n      _cache = cache;\n      cache = Object.create(null);\n    }\n  }\n\n  return {\n    has: function (key) {\n      return cache[key] !== undefined || _cache[key] !== undefined\n    },\n    remove: function (key) {\n      if(cache[key] !== undefined)\n        cache[key] = undefined;\n      if(_cache[key] !== undefined)\n        _cache[key] = undefined;\n    },\n    get: function (key) {\n      var v = cache[key];\n      if(v !== undefined) return v\n      if((v = _cache[key]) !== undefined) {\n        update(key, v);\n        return v\n      }\n    },\n    set: function (key, value) {\n      if(cache[key] !== undefined) cache[key] = value;\n      else update(key, value);\n    },\n    clear: function () {\n      cache = Object.create(null);\n      _cache = Object.create(null);\n    }\n  }\n};\n\nvar HLRU = hashlru;\n\nfunction getLruCache(cacheSize) {\n  if (cacheSize >= 1) {\n    return HLRU(cacheSize);\n  }\n\n  return {\n    get: function get() {\n      return undefined;\n    },\n    set: function set() {}\n  };\n}\n\nvar CLASS_PART_SEPARATOR = '-';\nfunction createClassUtils(config) {\n  var classMap = createClassMap(config);\n\n  function getClassGroupId(className) {\n    var classParts = className.split(CLASS_PART_SEPARATOR); // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n\n    if (classParts[0] === '' && classParts.length !== 1) {\n      classParts.shift();\n    }\n\n    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n  }\n\n  function getConflictingClassGroupIds(classGroupId) {\n    return config.conflictingClassGroups[classGroupId] || [];\n  }\n\n  return {\n    getClassGroupId: getClassGroupId,\n    getConflictingClassGroupIds: getConflictingClassGroupIds\n  };\n}\n\nfunction getGroupRecursive(classParts, classPartObject) {\n  var _classPartObject$vali;\n\n  if (classParts.length === 0) {\n    return classPartObject.classGroupId;\n  }\n\n  var currentClassPart = classParts[0];\n  var nextClassPartObject = classPartObject.nextPart[currentClassPart];\n  var classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n\n  if (classGroupFromNextClassPart) {\n    return classGroupFromNextClassPart;\n  }\n\n  if (classPartObject.validators.length === 0) {\n    return undefined;\n  }\n\n  var classRest = classParts.join(CLASS_PART_SEPARATOR);\n  return (_classPartObject$vali = classPartObject.validators.find(function (_ref) {\n    var validator = _ref.validator;\n    return validator(classRest);\n  })) == null ? void 0 : _classPartObject$vali.classGroupId;\n}\n\nvar arbitraryPropertyRegex = /^\\[(.+)\\]$/;\n\nfunction getGroupIdForArbitraryProperty(className) {\n  if (arbitraryPropertyRegex.test(className)) {\n    var arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n    var property = arbitraryPropertyClassName == null ? void 0 : arbitraryPropertyClassName.substring(0, arbitraryPropertyClassName.indexOf(':'));\n\n    if (property) {\n      // I use two dots here because one dot is used as prefix for class groups in plugins\n      return 'arbitrary..' + property;\n    }\n  }\n}\n/**\r\n * Exported for testing only\r\n */\n\n\nfunction createClassMap(config) {\n  var theme = config.theme,\n      prefix = config.prefix;\n  var classMap = {\n    nextPart: {},\n    validators: []\n  };\n  var prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config.classGroups), prefix);\n  prefixedClassGroupEntries.forEach(function (_ref2) {\n    var classGroupId = _ref2[0],\n        classGroup = _ref2[1];\n    processClassesRecursively(classGroup, classMap, classGroupId, theme);\n  });\n  return classMap;\n}\n\nfunction processClassesRecursively(classGroup, classPartObject, classGroupId, theme) {\n  classGroup.forEach(function (classDefinition) {\n    if (typeof classDefinition === 'string') {\n      var classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\n      classPartObjectToEdit.classGroupId = classGroupId;\n      return;\n    }\n\n    if (typeof classDefinition === 'function') {\n      if (isThemeGetter(classDefinition)) {\n        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n        return;\n      }\n\n      classPartObject.validators.push({\n        validator: classDefinition,\n        classGroupId: classGroupId\n      });\n      return;\n    }\n\n    Object.entries(classDefinition).forEach(function (_ref3) {\n      var key = _ref3[0],\n          classGroup = _ref3[1];\n      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n    });\n  });\n}\n\nfunction getPart(classPartObject, path) {\n  var currentClassPartObject = classPartObject;\n  path.split(CLASS_PART_SEPARATOR).forEach(function (pathPart) {\n    if (currentClassPartObject.nextPart[pathPart] === undefined) {\n      currentClassPartObject.nextPart[pathPart] = {\n        nextPart: {},\n        validators: []\n      };\n    }\n\n    currentClassPartObject = currentClassPartObject.nextPart[pathPart];\n  });\n  return currentClassPartObject;\n}\n\nfunction isThemeGetter(func) {\n  return func.isThemeGetter;\n}\n\nfunction getPrefixedClassGroupEntries(classGroupEntries, prefix) {\n  if (!prefix) {\n    return classGroupEntries;\n  }\n\n  return classGroupEntries.map(function (_ref4) {\n    var classGroupId = _ref4[0],\n        classGroup = _ref4[1];\n    var prefixedClassGroup = classGroup.map(function (classDefinition) {\n      if (typeof classDefinition === 'string') {\n        return prefix + classDefinition;\n      }\n\n      if (typeof classDefinition === 'object') {\n        return Object.fromEntries(Object.entries(classDefinition).map(function (_ref5) {\n          var key = _ref5[0],\n              value = _ref5[1];\n          return [prefix + key, value];\n        }));\n      }\n\n      return classDefinition;\n    });\n    return [classGroupId, prefixedClassGroup];\n  });\n}\n\nfunction createConfigUtils(config) {\n  return _extends({\n    cache: getLruCache(config.cacheSize)\n  }, createClassUtils(config));\n}\n\nvar SPLIT_CLASSES_REGEX = /\\s+/;\nvar IMPORTANT_MODIFIER = '!'; // Regex is needed so we don't match against colons in labels for arbitrary values like `text-[color:var(--mystery-var)]`\n// I'd prefer to use a negative lookbehind for all supported labels, but lookbheinds don't have good browser support yet. More info: https://caniuse.com/js-regexp-lookbehind\n\nvar MODIFIER_SEPARATOR_REGEX = /:(?![^[]*\\])/;\nvar MODIFIER_SEPARATOR = ':';\nfunction mergeClassList(classList, configUtils) {\n  var getClassGroupId = configUtils.getClassGroupId,\n      getConflictingClassGroupIds = configUtils.getConflictingClassGroupIds;\n  /**\r\n   * Set of classGroupIds in following format:\r\n   * `{importantModifier}{variantModifiers}{classGroupId}`\r\n   * @example 'float'\r\n   * @example 'hover:focus:bg-color'\r\n   * @example '!md:pr'\r\n   */\n\n  var classGroupsInConflict = new Set();\n  return classList.trim().split(SPLIT_CLASSES_REGEX).map(function (originalClassName) {\n    var modifiers = originalClassName.split(MODIFIER_SEPARATOR_REGEX);\n    var classNameWithImportantModifier = modifiers.pop();\n    var hasImportantModifier = classNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER);\n    var className = hasImportantModifier ? classNameWithImportantModifier.substring(1) : classNameWithImportantModifier;\n    var classGroupId = getClassGroupId(className);\n\n    if (!classGroupId) {\n      return {\n        isTailwindClass: false,\n        originalClassName: originalClassName\n      };\n    }\n\n    var variantModifier = modifiers.length === 0 ? '' : modifiers.sort().concat('').join(MODIFIER_SEPARATOR);\n    var fullModifier = hasImportantModifier ? IMPORTANT_MODIFIER + variantModifier : variantModifier;\n    return {\n      isTailwindClass: true,\n      modifier: fullModifier,\n      classGroupId: classGroupId,\n      originalClassName: originalClassName\n    };\n  }).reverse() // Last class in conflict wins, so we need to filter conflicting classes in reverse order.\n  .filter(function (parsed) {\n    if (!parsed.isTailwindClass) {\n      return true;\n    }\n\n    var modifier = parsed.modifier,\n        classGroupId = parsed.classGroupId;\n    var classId = modifier + \":\" + classGroupId;\n\n    if (classGroupsInConflict.has(classId)) {\n      return false;\n    }\n\n    classGroupsInConflict.add(classId);\n    getConflictingClassGroupIds(classGroupId).forEach(function (group) {\n      return classGroupsInConflict.add(modifier + \":\" + group);\n    });\n    return true;\n  }).reverse().map(function (parsed) {\n    return parsed.originalClassName;\n  }).join(' ');\n}\n\nfunction createTailwindMerge() {\n  for (var _len = arguments.length, createConfig = new Array(_len), _key = 0; _key < _len; _key++) {\n    createConfig[_key] = arguments[_key];\n  }\n\n  var configUtils;\n  var cacheGet;\n  var cacheSet;\n  var functionToCall = initTailwindMerge;\n\n  function initTailwindMerge(classList) {\n    var firstCreateConfig = createConfig[0],\n        restCreateConfig = createConfig.slice(1);\n    var config = restCreateConfig.reduce(function (previousConfig, createConfigCurrent) {\n      return createConfigCurrent(previousConfig);\n    }, firstCreateConfig());\n    configUtils = createConfigUtils(config);\n    cacheGet = configUtils.cache.get;\n    cacheSet = configUtils.cache.set;\n    functionToCall = tailwindMerge;\n    return tailwindMerge(classList);\n  }\n\n  function tailwindMerge(classList) {\n    var cachedResult = cacheGet(classList);\n\n    if (cachedResult) {\n      return cachedResult;\n    }\n\n    var result = mergeClassList(classList, configUtils);\n    cacheSet(classList, result);\n    return result;\n  }\n\n  return function callTailwindMerge() {\n    var classList = '';\n    var temp; // Credits → https://github.com/lukeed/clsx/blob/v1.1.1/src/index.js\n\n    for (var index = 0; index < arguments.length; index += 1) {\n      if (temp = arguments[index]) {\n        classList && (classList += ' ');\n        classList += temp;\n      }\n    }\n\n    return functionToCall(classList);\n  };\n}\n\nfunction fromTheme(key) {\n  var themeGetter = function themeGetter(theme) {\n    return theme[key] || [];\n  };\n\n  themeGetter.isThemeGetter = true;\n  return themeGetter;\n}\n\nvar arbitraryValueRegex = /^\\[(.+)\\]$/;\nvar fractionRegex = /^\\d+\\/\\d+$/;\nvar stringLengths = /*#__PURE__*/new Set(['px', 'full', 'screen']);\nvar tshirtUnitRegex = /^(\\d+)?(xs|sm|md|lg|xl)$/;\nvar lengthUnitRegex = /\\d+(%|px|em|rem|vh|vw|pt|pc|in|cm|mm|cap|ch|ex|lh|rlh|vi|vb|vmin|vmax)/; // Shadow always begins with x and y offset separated by underscore\n\nvar shadowRegex = /^-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\nfunction isLength(classPart) {\n  return !Number.isNaN(Number(classPart)) || stringLengths.has(classPart) || fractionRegex.test(classPart) || isArbitraryLength(classPart);\n}\nfunction isArbitraryLength(classPart) {\n  var _arbitraryValueRegex$;\n\n  var arbitraryValue = (_arbitraryValueRegex$ = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$[1];\n\n  if (arbitraryValue) {\n    return arbitraryValue.startsWith('length:') || lengthUnitRegex.test(arbitraryValue);\n  }\n\n  return false;\n}\nfunction isArbitrarySize(classPart) {\n  var _arbitraryValueRegex$2;\n\n  var arbitraryValue = (_arbitraryValueRegex$2 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$2[1];\n  return arbitraryValue ? arbitraryValue.startsWith('size:') : false;\n}\nfunction isArbitraryPosition(classPart) {\n  var _arbitraryValueRegex$3;\n\n  var arbitraryValue = (_arbitraryValueRegex$3 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$3[1];\n  return arbitraryValue ? arbitraryValue.startsWith('position:') : false;\n}\nfunction isArbitraryUrl(classPart) {\n  var _arbitraryValueRegex$4;\n\n  var arbitraryValue = (_arbitraryValueRegex$4 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$4[1];\n  return arbitraryValue ? arbitraryValue.startsWith('url(') || arbitraryValue.startsWith('url:') : false;\n}\nfunction isArbitraryWeight(classPart) {\n  var _arbitraryValueRegex$5;\n\n  var arbitraryValue = (_arbitraryValueRegex$5 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$5[1];\n  return arbitraryValue ? !Number.isNaN(Number(arbitraryValue)) || arbitraryValue.startsWith('weight:') : false;\n}\nfunction isInteger(classPart) {\n  var _arbitraryValueRegex$6;\n\n  var arbitraryValue = (_arbitraryValueRegex$6 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$6[1];\n\n  if (arbitraryValue) {\n    return Number.isInteger(Number(arbitraryValue));\n  }\n\n  return Number.isInteger(Number(classPart));\n}\nfunction isArbitraryValue(classPart) {\n  return arbitraryValueRegex.test(classPart);\n}\nfunction isAny() {\n  return true;\n}\nfunction isTshirtSize(classPart) {\n  return tshirtUnitRegex.test(classPart);\n}\nfunction isArbitraryShadow(classPart) {\n  var _arbitraryValueRegex$7;\n\n  var arbitraryValue = (_arbitraryValueRegex$7 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$7[1];\n\n  if (arbitraryValue) {\n    return shadowRegex.test(arbitraryValue);\n  }\n\n  return false;\n}\n\nfunction getDefaultConfig() {\n  var colors = fromTheme('colors');\n  var spacing = fromTheme('spacing');\n  var blur = fromTheme('blur');\n  var brightness = fromTheme('brightness');\n  var borderColor = fromTheme('borderColor');\n  var borderRadius = fromTheme('borderRadius');\n  var borderWidth = fromTheme('borderWidth');\n  var contrast = fromTheme('contrast');\n  var grayscale = fromTheme('grayscale');\n  var hueRotate = fromTheme('hueRotate');\n  var invert = fromTheme('invert');\n  var gap = fromTheme('gap');\n  var gradientColorStops = fromTheme('gradientColorStops');\n  var inset = fromTheme('inset');\n  var margin = fromTheme('margin');\n  var opacity = fromTheme('opacity');\n  var padding = fromTheme('padding');\n  var saturate = fromTheme('saturate');\n  var scale = fromTheme('scale');\n  var sepia = fromTheme('sepia');\n  var skew = fromTheme('skew');\n  var space = fromTheme('space');\n  var translate = fromTheme('translate');\n\n  var getOverscroll = function getOverscroll() {\n    return ['auto', 'contain', 'none'];\n  };\n\n  var getOverflow = function getOverflow() {\n    return ['auto', 'hidden', 'clip', 'visible', 'scroll'];\n  };\n\n  var getSpacingWithAuto = function getSpacingWithAuto() {\n    return ['auto', spacing];\n  };\n\n  var getLengthWithEmpty = function getLengthWithEmpty() {\n    return ['', isLength];\n  };\n\n  var getIntegerWithAuto = function getIntegerWithAuto() {\n    return ['auto', isInteger];\n  };\n\n  var getPositions = function getPositions() {\n    return ['bottom', 'center', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top', 'top'];\n  };\n\n  var getLineStyles = function getLineStyles() {\n    return ['solid', 'dashed', 'dotted', 'double', 'none'];\n  };\n\n  var getBlendModes = function getBlendModes() {\n    return ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity'];\n  };\n\n  var getAlign = function getAlign() {\n    return ['start', 'end', 'center', 'between', 'around', 'evenly'];\n  };\n\n  var getZeroAndEmpty = function getZeroAndEmpty() {\n    return ['', '0', isArbitraryValue];\n  };\n\n  var getBreaks = function getBreaks() {\n    return ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];\n  };\n\n  return {\n    cacheSize: 500,\n    theme: {\n      colors: [isAny],\n      spacing: [isLength],\n      blur: ['none', '', isTshirtSize, isArbitraryLength],\n      brightness: [isInteger],\n      borderColor: [colors],\n      borderRadius: ['none', '', 'full', isTshirtSize, isArbitraryLength],\n      borderWidth: getLengthWithEmpty(),\n      contrast: [isInteger],\n      grayscale: getZeroAndEmpty(),\n      hueRotate: [isInteger],\n      invert: getZeroAndEmpty(),\n      gap: [spacing],\n      gradientColorStops: [colors],\n      inset: getSpacingWithAuto(),\n      margin: getSpacingWithAuto(),\n      opacity: [isInteger],\n      padding: [spacing],\n      saturate: [isInteger],\n      scale: [isInteger],\n      sepia: getZeroAndEmpty(),\n      skew: [isInteger, isArbitraryValue],\n      space: [spacing],\n      translate: [spacing]\n    },\n    classGroups: {\n      // Layout\n\n      /**\r\n       * Aspect Ratio\r\n       * @see https://tailwindcss.com/docs/aspect-ratio\r\n       */\n      aspect: [{\n        aspect: ['auto', 'square', 'video', isArbitraryValue]\n      }],\n\n      /**\r\n       * Container\r\n       * @see https://tailwindcss.com/docs/container\r\n       */\n      container: ['container'],\n\n      /**\r\n       * Columns\r\n       * @see https://tailwindcss.com/docs/columns\r\n       */\n      columns: [{\n        columns: [isTshirtSize]\n      }],\n\n      /**\r\n       * Break After\r\n       * @see https://tailwindcss.com/docs/break-after\r\n       */\n      'break-after': [{\n        'break-after': getBreaks()\n      }],\n\n      /**\r\n       * Break Before\r\n       * @see https://tailwindcss.com/docs/break-before\r\n       */\n      'break-before': [{\n        'break-before': getBreaks()\n      }],\n\n      /**\r\n       * Break Inside\r\n       * @see https://tailwindcss.com/docs/break-inside\r\n       */\n      'break-inside': [{\n        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']\n      }],\n\n      /**\r\n       * Box Decoration Break\r\n       * @see https://tailwindcss.com/docs/box-decoration-break\r\n       */\n      'box-decoration': [{\n        'box-decoration': ['slice', 'clone']\n      }],\n\n      /**\r\n       * Box Sizing\r\n       * @see https://tailwindcss.com/docs/box-sizing\r\n       */\n      box: [{\n        box: ['border', 'content']\n      }],\n\n      /**\r\n       * Display\r\n       * @see https://tailwindcss.com/docs/display\r\n       */\n      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],\n\n      /**\r\n       * Floats\r\n       * @see https://tailwindcss.com/docs/float\r\n       */\n      \"float\": [{\n        \"float\": ['right', 'left', 'none']\n      }],\n\n      /**\r\n       * Clear\r\n       * @see https://tailwindcss.com/docs/clear\r\n       */\n      clear: [{\n        clear: ['left', 'right', 'both', 'none']\n      }],\n\n      /**\r\n       * Isolation\r\n       * @see https://tailwindcss.com/docs/isolation\r\n       */\n      isolation: ['isolate', 'isolation-auto'],\n\n      /**\r\n       * Object Fit\r\n       * @see https://tailwindcss.com/docs/object-fit\r\n       */\n      'object-fit': [{\n        object: ['contain', 'cover', 'fill', 'none', 'scale-down']\n      }],\n\n      /**\r\n       * Object Position\r\n       * @see https://tailwindcss.com/docs/object-position\r\n       */\n      'object-position': [{\n        object: [].concat(getPositions(), [isArbitraryValue])\n      }],\n\n      /**\r\n       * Overflow\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\n      overflow: [{\n        overflow: getOverflow()\n      }],\n\n      /**\r\n       * Overflow X\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\n      'overflow-x': [{\n        'overflow-x': getOverflow()\n      }],\n\n      /**\r\n       * Overflow Y\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\n      'overflow-y': [{\n        'overflow-y': getOverflow()\n      }],\n\n      /**\r\n       * Overscroll Behavior\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\n      overscroll: [{\n        overscroll: getOverscroll()\n      }],\n\n      /**\r\n       * Overscroll Behavior X\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\n      'overscroll-x': [{\n        'overscroll-x': getOverscroll()\n      }],\n\n      /**\r\n       * Overscroll Behavior Y\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\n      'overscroll-y': [{\n        'overscroll-y': getOverscroll()\n      }],\n\n      /**\r\n       * Position\r\n       * @see https://tailwindcss.com/docs/position\r\n       */\n      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n\n      /**\r\n       * Top / Right / Bottom / Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      inset: [{\n        inset: [inset]\n      }],\n\n      /**\r\n       * Right / Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      'inset-x': [{\n        'inset-x': [inset]\n      }],\n\n      /**\r\n       * Top / Bottom\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      'inset-y': [{\n        'inset-y': [inset]\n      }],\n\n      /**\r\n       * Top\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      top: [{\n        top: [inset]\n      }],\n\n      /**\r\n       * Right\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      right: [{\n        right: [inset]\n      }],\n\n      /**\r\n       * Bottom\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      bottom: [{\n        bottom: [inset]\n      }],\n\n      /**\r\n       * Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      left: [{\n        left: [inset]\n      }],\n\n      /**\r\n       * Visibility\r\n       * @see https://tailwindcss.com/docs/visibility\r\n       */\n      visibility: ['visible', 'invisible'],\n\n      /**\r\n       * Z-Index\r\n       * @see https://tailwindcss.com/docs/z-index\r\n       */\n      z: [{\n        z: [isLength]\n      }],\n      // Flexbox and Grid\n\n      /**\r\n       * Flex Basis\r\n       * @see https://tailwindcss.com/docs/flex-basis\r\n       */\n      basis: [{\n        basis: [spacing]\n      }],\n\n      /**\r\n       * Flex Direction\r\n       * @see https://tailwindcss.com/docs/flex-direction\r\n       */\n      'flex-direction': [{\n        flex: ['row', 'row-reverse', 'col', 'col-reverse']\n      }],\n\n      /**\r\n       * Flex Wrap\r\n       * @see https://tailwindcss.com/docs/flex-wrap\r\n       */\n      'flex-wrap': [{\n        flex: ['wrap', 'wrap-reverse', 'nowrap']\n      }],\n\n      /**\r\n       * Flex\r\n       * @see https://tailwindcss.com/docs/flex\r\n       */\n      flex: [{\n        flex: ['1', 'auto', 'initial', 'none', isArbitraryValue]\n      }],\n\n      /**\r\n       * Flex Grow\r\n       * @see https://tailwindcss.com/docs/flex-grow\r\n       */\n      grow: [{\n        grow: getZeroAndEmpty()\n      }],\n\n      /**\r\n       * Flex Shrink\r\n       * @see https://tailwindcss.com/docs/flex-shrink\r\n       */\n      shrink: [{\n        shrink: getZeroAndEmpty()\n      }],\n\n      /**\r\n       * Order\r\n       * @see https://tailwindcss.com/docs/order\r\n       */\n      order: [{\n        order: ['first', 'last', 'none', isInteger]\n      }],\n\n      /**\r\n       * Grid Template Columns\r\n       * @see https://tailwindcss.com/docs/grid-template-columns\r\n       */\n      'grid-cols': [{\n        'grid-cols': [isAny]\n      }],\n\n      /**\r\n       * Grid Column Start / End\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\n      'col-start-end': [{\n        col: ['auto', {\n          span: [isInteger]\n        }]\n      }],\n\n      /**\r\n       * Grid Column Start\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\n      'col-start': [{\n        'col-start': getIntegerWithAuto()\n      }],\n\n      /**\r\n       * Grid Column End\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\n      'col-end': [{\n        'col-end': getIntegerWithAuto()\n      }],\n\n      /**\r\n       * Grid Template Rows\r\n       * @see https://tailwindcss.com/docs/grid-template-rows\r\n       */\n      'grid-rows': [{\n        'grid-rows': [isAny]\n      }],\n\n      /**\r\n       * Grid Row Start / End\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\n      'row-start-end': [{\n        row: ['auto', {\n          span: [isInteger]\n        }]\n      }],\n\n      /**\r\n       * Grid Row Start\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\n      'row-start': [{\n        'row-start': getIntegerWithAuto()\n      }],\n\n      /**\r\n       * Grid Row End\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\n      'row-end': [{\n        'row-end': getIntegerWithAuto()\n      }],\n\n      /**\r\n       * Grid Auto Flow\r\n       * @see https://tailwindcss.com/docs/grid-auto-flow\r\n       */\n      'grid-flow': [{\n        'grid-flow': ['row', 'col', 'row-dense', 'col-dense']\n      }],\n\n      /**\r\n       * Grid Auto Columns\r\n       * @see https://tailwindcss.com/docs/grid-auto-columns\r\n       */\n      'auto-cols': [{\n        'auto-cols': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n\n      /**\r\n       * Grid Auto Rows\r\n       * @see https://tailwindcss.com/docs/grid-auto-rows\r\n       */\n      'auto-rows': [{\n        'auto-rows': ['auto', 'min', 'max', 'fr', isArbitraryValue]\n      }],\n\n      /**\r\n       * Gap\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\n      gap: [{\n        gap: [gap]\n      }],\n\n      /**\r\n       * Gap X\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\n      'gap-x': [{\n        'gap-x': [gap]\n      }],\n\n      /**\r\n       * Gap Y\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\n      'gap-y': [{\n        'gap-y': [gap]\n      }],\n\n      /**\r\n       * Justify Content\r\n       * @see https://tailwindcss.com/docs/justify-content\r\n       */\n      'justify-content': [{\n        justify: getAlign()\n      }],\n\n      /**\r\n       * Justify Items\r\n       * @see https://tailwindcss.com/docs/justify-items\r\n       */\n      'justify-items': [{\n        'justify-items': ['start', 'end', 'center', 'stretch']\n      }],\n\n      /**\r\n       * Justify Self\r\n       * @see https://tailwindcss.com/docs/justify-self\r\n       */\n      'justify-self': [{\n        'justify-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n\n      /**\r\n       * Align Content\r\n       * @see https://tailwindcss.com/docs/align-content\r\n       */\n      'align-content': [{\n        content: getAlign()\n      }],\n\n      /**\r\n       * Align Items\r\n       * @see https://tailwindcss.com/docs/align-items\r\n       */\n      'align-items': [{\n        items: ['start', 'end', 'center', 'baseline', 'stretch']\n      }],\n\n      /**\r\n       * Align Self\r\n       * @see https://tailwindcss.com/docs/align-self\r\n       */\n      'align-self': [{\n        self: ['auto', 'start', 'end', 'center', 'stretch', 'baseline']\n      }],\n\n      /**\r\n       * Place Content\r\n       * @see https://tailwindcss.com/docs/place-content\r\n       */\n      'place-content': [{\n        'place-content': [].concat(getAlign(), ['stretch'])\n      }],\n\n      /**\r\n       * Place Items\r\n       * @see https://tailwindcss.com/docs/place-items\r\n       */\n      'place-items': [{\n        'place-items': ['start', 'end', 'center', 'stretch']\n      }],\n\n      /**\r\n       * Place Self\r\n       * @see https://tailwindcss.com/docs/place-self\r\n       */\n      'place-self': [{\n        'place-self': ['auto', 'start', 'end', 'center', 'stretch']\n      }],\n      // Spacing\n\n      /**\r\n       * Padding\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      p: [{\n        p: [padding]\n      }],\n\n      /**\r\n       * Padding X\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      px: [{\n        px: [padding]\n      }],\n\n      /**\r\n       * Padding Y\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      py: [{\n        py: [padding]\n      }],\n\n      /**\r\n       * Padding Top\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pt: [{\n        pt: [padding]\n      }],\n\n      /**\r\n       * Padding Right\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pr: [{\n        pr: [padding]\n      }],\n\n      /**\r\n       * Padding Bottom\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pb: [{\n        pb: [padding]\n      }],\n\n      /**\r\n       * Padding Left\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pl: [{\n        pl: [padding]\n      }],\n\n      /**\r\n       * Margin\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      m: [{\n        m: [margin]\n      }],\n\n      /**\r\n       * Margin X\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mx: [{\n        mx: [margin]\n      }],\n\n      /**\r\n       * Margin Y\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      my: [{\n        my: [margin]\n      }],\n\n      /**\r\n       * Margin Top\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mt: [{\n        mt: [margin]\n      }],\n\n      /**\r\n       * Margin Right\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mr: [{\n        mr: [margin]\n      }],\n\n      /**\r\n       * Margin Bottom\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mb: [{\n        mb: [margin]\n      }],\n\n      /**\r\n       * Margin Left\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      ml: [{\n        ml: [margin]\n      }],\n\n      /**\r\n       * Space Between X\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-x': [{\n        'space-x': [space]\n      }],\n\n      /**\r\n       * Space Between X Reverse\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-x-reverse': ['space-x-reverse'],\n\n      /**\r\n       * Space Between Y\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-y': [{\n        'space-y': [space]\n      }],\n\n      /**\r\n       * Space Between Y Reverse\r\n       * @see https://tailwindcss.com/docs/space\r\n       */\n      'space-y-reverse': ['space-y-reverse'],\n      // Sizing\n\n      /**\r\n       * Width\r\n       * @see https://tailwindcss.com/docs/width\r\n       */\n      w: [{\n        w: ['auto', 'min', 'max', spacing]\n      }],\n\n      /**\r\n       * Min-Width\r\n       * @see https://tailwindcss.com/docs/min-width\r\n       */\n      'min-w': [{\n        'min-w': ['min', 'max', 'fit', isLength]\n      }],\n\n      /**\r\n       * Max-Width\r\n       * @see https://tailwindcss.com/docs/max-width\r\n       */\n      'max-w': [{\n        'max-w': ['0', 'none', 'full', 'min', 'max', 'fit', 'prose', {\n          screen: [isTshirtSize]\n        }, isTshirtSize, isArbitraryLength]\n      }],\n\n      /**\r\n       * Height\r\n       * @see https://tailwindcss.com/docs/height\r\n       */\n      h: [{\n        h: getSpacingWithAuto()\n      }],\n\n      /**\r\n       * Min-Height\r\n       * @see https://tailwindcss.com/docs/min-height\r\n       */\n      'min-h': [{\n        'min-h': ['min', 'max', 'fit', isLength]\n      }],\n\n      /**\r\n       * Max-Height\r\n       * @see https://tailwindcss.com/docs/max-height\r\n       */\n      'max-h': [{\n        'max-h': [spacing, 'min', 'max', 'fit']\n      }],\n      // Typography\n\n      /**\r\n       * Font Size\r\n       * @see https://tailwindcss.com/docs/font-size\r\n       */\n      'font-size': [{\n        text: ['base', isTshirtSize, isArbitraryLength]\n      }],\n\n      /**\r\n       * Font Smoothing\r\n       * @see https://tailwindcss.com/docs/font-smoothing\r\n       */\n      'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n\n      /**\r\n       * Font Style\r\n       * @see https://tailwindcss.com/docs/font-style\r\n       */\n      'font-style': ['italic', 'not-italic'],\n\n      /**\r\n       * Font Weight\r\n       * @see https://tailwindcss.com/docs/font-weight\r\n       */\n      'font-weight': [{\n        font: ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black', isArbitraryWeight]\n      }],\n\n      /**\r\n       * Font Family\r\n       * @see https://tailwindcss.com/docs/font-family\r\n       */\n      'font-family': [{\n        font: [isAny]\n      }],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-normal': ['normal-nums'],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-ordinal': ['ordinal'],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-slashed-zero': ['slashed-zero'],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-fraction': ['diagonal-fractions', 'stacked-fractons'],\n\n      /**\r\n       * Letter Spacing\r\n       * @see https://tailwindcss.com/docs/letter-spacing\r\n       */\n      tracking: [{\n        tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest', isArbitraryLength]\n      }],\n\n      /**\r\n       * Line Height\r\n       * @see https://tailwindcss.com/docs/line-height\r\n       */\n      leading: [{\n        leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose', isLength]\n      }],\n\n      /**\r\n       * List Style Type\r\n       * @see https://tailwindcss.com/docs/list-style-type\r\n       */\n      'list-style-type': [{\n        list: ['none', 'disc', 'decimal', isArbitraryValue]\n      }],\n\n      /**\r\n       * List Style Position\r\n       * @see https://tailwindcss.com/docs/list-style-position\r\n       */\n      'list-style-position': [{\n        list: ['inside', 'outside']\n      }],\n\n      /**\r\n       * Placeholder Color\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/placeholder-color\r\n       */\n      'placeholder-color': [{\n        placeholder: [colors]\n      }],\n\n      /**\r\n       * Placeholder Opacity\r\n       * @see https://tailwindcss.com/docs/placeholder-opacity\r\n       */\n      'placeholder-opacity': [{\n        'placeholder-opacity': [opacity]\n      }],\n\n      /**\r\n       * Text Alignment\r\n       * @see https://tailwindcss.com/docs/text-align\r\n       */\n      'text-alignment': [{\n        text: ['left', 'center', 'right', 'justify']\n      }],\n\n      /**\r\n       * Text Color\r\n       * @see https://tailwindcss.com/docs/text-color\r\n       */\n      'text-color': [{\n        text: [colors]\n      }],\n\n      /**\r\n       * Text Opacity\r\n       * @see https://tailwindcss.com/docs/text-opacity\r\n       */\n      'text-opacity': [{\n        'text-opacity': [opacity]\n      }],\n\n      /**\r\n       * Text Decoration\r\n       * @see https://tailwindcss.com/docs/text-decoration\r\n       */\n      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n\n      /**\r\n       * Text Decoration Style\r\n       * @see https://tailwindcss.com/docs/text-decoration-style\r\n       */\n      'text-decoration-style': [{\n        decoration: [].concat(getLineStyles(), ['wavy'])\n      }],\n\n      /**\r\n       * Text Decoration Thickness\r\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\r\n       */\n      'text-decoration-thickness': [{\n        decoration: ['auto', 'from-font', isLength]\n      }],\n\n      /**\r\n       * Text Underline Offset\r\n       * @see https://tailwindcss.com/docs/text-underline-offset\r\n       */\n      'underline-offset': [{\n        'underline-offset': ['auto', isLength]\n      }],\n\n      /**\r\n       * Text Decoration Color\r\n       * @see https://tailwindcss.com/docs/text-decoration-color\r\n       */\n      'text-decoration-color': [{\n        decoration: [colors]\n      }],\n\n      /**\r\n       * Text Transform\r\n       * @see https://tailwindcss.com/docs/text-transform\r\n       */\n      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n\n      /**\r\n       * Text Overflow\r\n       * @see https://tailwindcss.com/docs/text-overflow\r\n       */\n      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n\n      /**\r\n       * Text Indent\r\n       * @see https://tailwindcss.com/docs/text-indent\r\n       */\n      indent: [{\n        indent: [spacing]\n      }],\n\n      /**\r\n       * Vertical Alignment\r\n       * @see https://tailwindcss.com/docs/vertical-align\r\n       */\n      'vertical-align': [{\n        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryLength]\n      }],\n\n      /**\r\n       * Whitespace\r\n       * @see https://tailwindcss.com/docs/whitespace\r\n       */\n      whitespace: [{\n        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap']\n      }],\n\n      /**\r\n       * Word Break\r\n       * @see https://tailwindcss.com/docs/word-break\r\n       */\n      \"break\": [{\n        \"break\": ['normal', 'words', 'all']\n      }],\n\n      /**\r\n       * Content\r\n       * @see https://tailwindcss.com/docs/content\r\n       */\n      content: [{\n        content: ['none', isArbitraryValue]\n      }],\n      // Backgrounds\n\n      /**\r\n       * Background Attachment\r\n       * @see https://tailwindcss.com/docs/background-attachment\r\n       */\n      'bg-attachment': [{\n        bg: ['fixed', 'local', 'scroll']\n      }],\n\n      /**\r\n       * Background Clip\r\n       * @see https://tailwindcss.com/docs/background-clip\r\n       */\n      'bg-clip': [{\n        'bg-clip': ['border', 'padding', 'content', 'text']\n      }],\n\n      /**\r\n       * Background Opacity\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/background-opacity\r\n       */\n      'bg-opacity': [{\n        'bg-opacity': [opacity]\n      }],\n\n      /**\r\n       * Background Origin\r\n       * @see https://tailwindcss.com/docs/background-origin\r\n       */\n      'bg-origin': [{\n        'bg-origin': ['border', 'padding', 'content']\n      }],\n\n      /**\r\n       * Background Position\r\n       * @see https://tailwindcss.com/docs/background-position\r\n       */\n      'bg-position': [{\n        bg: [].concat(getPositions(), [isArbitraryPosition])\n      }],\n\n      /**\r\n       * Background Repeat\r\n       * @see https://tailwindcss.com/docs/background-repeat\r\n       */\n      'bg-repeat': [{\n        bg: ['no-repeat', {\n          repeat: ['', 'x', 'y', 'round', 'space']\n        }]\n      }],\n\n      /**\r\n       * Background Size\r\n       * @see https://tailwindcss.com/docs/background-size\r\n       */\n      'bg-size': [{\n        bg: ['auto', 'cover', 'contain', isArbitrarySize]\n      }],\n\n      /**\r\n       * Background Image\r\n       * @see https://tailwindcss.com/docs/background-image\r\n       */\n      'bg-image': [{\n        bg: ['none', {\n          'gradient-to': ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']\n        }, isArbitraryUrl]\n      }],\n\n      /**\r\n       * Background Color\r\n       * @see https://tailwindcss.com/docs/background-color\r\n       */\n      'bg-color': [{\n        bg: [colors]\n      }],\n\n      /**\r\n       * Gradient Color Stops From\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-from': [{\n        from: [gradientColorStops]\n      }],\n\n      /**\r\n       * Gradient Color Stops Via\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-via': [{\n        via: [gradientColorStops]\n      }],\n\n      /**\r\n       * Gradient Color Stops To\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-to': [{\n        to: [gradientColorStops]\n      }],\n      // Borders\n\n      /**\r\n       * Border Radius\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      rounded: [{\n        rounded: [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Top\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-t': [{\n        'rounded-t': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-r': [{\n        'rounded-r': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Bottom\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-b': [{\n        'rounded-b': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-l': [{\n        'rounded-l': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Top Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-tl': [{\n        'rounded-tl': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Top Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-tr': [{\n        'rounded-tr': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Bottom Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-br': [{\n        'rounded-br': [borderRadius]\n      }],\n\n      /**\r\n       * Border Radius Bottom Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-bl': [{\n        'rounded-bl': [borderRadius]\n      }],\n\n      /**\r\n       * Border Width\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w': [{\n        border: [borderWidth]\n      }],\n\n      /**\r\n       * Border Width X\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-x': [{\n        'border-x': [borderWidth]\n      }],\n\n      /**\r\n       * Border Width Y\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-y': [{\n        'border-y': [borderWidth]\n      }],\n\n      /**\r\n       * Border Width Top\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-t': [{\n        'border-t': [borderWidth]\n      }],\n\n      /**\r\n       * Border Width Right\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-r': [{\n        'border-r': [borderWidth]\n      }],\n\n      /**\r\n       * Border Width Bottom\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-b': [{\n        'border-b': [borderWidth]\n      }],\n\n      /**\r\n       * Border Width Left\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-l': [{\n        'border-l': [borderWidth]\n      }],\n\n      /**\r\n       * Border Opacity\r\n       * @see https://tailwindcss.com/docs/border-opacity\r\n       */\n      'border-opacity': [{\n        'border-opacity': [opacity]\n      }],\n\n      /**\r\n       * Border Style\r\n       * @see https://tailwindcss.com/docs/border-style\r\n       */\n      'border-style': [{\n        border: [].concat(getLineStyles(), ['hidden'])\n      }],\n\n      /**\r\n       * Divide Width X\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-x': [{\n        'divide-x': [borderWidth]\n      }],\n\n      /**\r\n       * Divide Width X Reverse\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-x-reverse': ['divide-x-reverse'],\n\n      /**\r\n       * Divide Width Y\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-y': [{\n        'divide-y': [borderWidth]\n      }],\n\n      /**\r\n       * Divide Width Y Reverse\r\n       * @see https://tailwindcss.com/docs/divide-width\r\n       */\n      'divide-y-reverse': ['divide-y-reverse'],\n\n      /**\r\n       * Divide Opacity\r\n       * @see https://tailwindcss.com/docs/divide-opacity\r\n       */\n      'divide-opacity': [{\n        'divide-opacity': [opacity]\n      }],\n\n      /**\r\n       * Divide Style\r\n       * @see https://tailwindcss.com/docs/divide-style\r\n       */\n      'divide-style': [{\n        divide: getLineStyles()\n      }],\n\n      /**\r\n       * Border Color\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color': [{\n        border: [borderColor]\n      }],\n\n      /**\r\n       * Border Color X\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-x': [{\n        'border-x': [borderColor]\n      }],\n\n      /**\r\n       * Border Color Y\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-y': [{\n        'border-y': [borderColor]\n      }],\n\n      /**\r\n       * Border Color Top\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-t': [{\n        'border-t': [borderColor]\n      }],\n\n      /**\r\n       * Border Color Right\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-r': [{\n        'border-r': [borderColor]\n      }],\n\n      /**\r\n       * Border Color Bottom\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-b': [{\n        'border-b': [borderColor]\n      }],\n\n      /**\r\n       * Border Color Left\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-l': [{\n        'border-l': [borderColor]\n      }],\n\n      /**\r\n       * Divide Color\r\n       * @see https://tailwindcss.com/docs/divide-color\r\n       */\n      'divide-color': [{\n        divide: [borderColor]\n      }],\n\n      /**\r\n       * Outline Style\r\n       * @see https://tailwindcss.com/docs/outline-style\r\n       */\n      'outline-style': [{\n        outline: [''].concat(getLineStyles(), ['hidden'])\n      }],\n\n      /**\r\n       * Outline Offset\r\n       * @see https://tailwindcss.com/docs/outline-offset\r\n       */\n      'outline-offset': [{\n        'outline-offset': [isLength]\n      }],\n\n      /**\r\n       * Outline Width\r\n       * @see https://tailwindcss.com/docs/outline-width\r\n       */\n      'outline-w': [{\n        outline: [isLength]\n      }],\n\n      /**\r\n       * Outline Color\r\n       * @see https://tailwindcss.com/docs/outline-color\r\n       */\n      'outline-color': [{\n        outline: [colors]\n      }],\n\n      /**\r\n       * Ring Width\r\n       * @see https://tailwindcss.com/docs/ring-width\r\n       */\n      'ring-w': [{\n        ring: getLengthWithEmpty()\n      }],\n\n      /**\r\n       * Ring Width Inset\r\n       * @see https://tailwindcss.com/docs/ring-width\r\n       */\n      'ring-w-inset': ['ring-inset'],\n\n      /**\r\n       * Ring Color\r\n       * @see https://tailwindcss.com/docs/ring-color\r\n       */\n      'ring-color': [{\n        ring: [colors]\n      }],\n\n      /**\r\n       * Ring Opacity\r\n       * @see https://tailwindcss.com/docs/ring-opacity\r\n       */\n      'ring-opacity': [{\n        'ring-opacity': [opacity]\n      }],\n\n      /**\r\n       * Ring Offset Width\r\n       * @see https://tailwindcss.com/docs/ring-offset-width\r\n       */\n      'ring-offset-w': [{\n        'ring-offset': [isLength]\n      }],\n\n      /**\r\n       * Ring Offset Color\r\n       * @see https://tailwindcss.com/docs/ring-offset-color\r\n       */\n      'ring-offset-color': [{\n        'ring-offset': [colors]\n      }],\n      // Effects\n\n      /**\r\n       * Box Shadow\r\n       * @see https://tailwindcss.com/docs/box-shadow\r\n       */\n      shadow: [{\n        shadow: ['', 'inner', 'none', isTshirtSize, isArbitraryShadow]\n      }],\n\n      /**\r\n       * Box Shadow Color\r\n       * @see https://tailwindcss.com/docs/box-shadow-color\r\n       */\n      'shadow-color': [{\n        shadow: [isAny]\n      }],\n\n      /**\r\n       * Opacity\r\n       * @see https://tailwindcss.com/docs/opacity\r\n       */\n      opacity: [{\n        opacity: [opacity]\n      }],\n\n      /**\r\n       * Mix Beldn Mode\r\n       * @see https://tailwindcss.com/docs/mix-blend-mode\r\n       */\n      'mix-blend': [{\n        'mix-blend': getBlendModes()\n      }],\n\n      /**\r\n       * Background Blend Mode\r\n       * @see https://tailwindcss.com/docs/background-blend-mode\r\n       */\n      'bg-blend': [{\n        'bg-blend': getBlendModes()\n      }],\n      // Filters\n\n      /**\r\n       * Filter\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/filter\r\n       */\n      filter: [{\n        filter: ['', 'none']\n      }],\n\n      /**\r\n       * Blur\r\n       * @see https://tailwindcss.com/docs/blur\r\n       */\n      blur: [{\n        blur: [blur]\n      }],\n\n      /**\r\n       * Brightness\r\n       * @see https://tailwindcss.com/docs/brightness\r\n       */\n      brightness: [{\n        brightness: [brightness]\n      }],\n\n      /**\r\n       * Contrast\r\n       * @see https://tailwindcss.com/docs/contrast\r\n       */\n      contrast: [{\n        contrast: [contrast]\n      }],\n\n      /**\r\n       * Drop Shadow\r\n       * @see https://tailwindcss.com/docs/drop-shadow\r\n       */\n      'drop-shadow': [{\n        'drop-shadow': ['', 'none', isTshirtSize, isArbitraryValue]\n      }],\n\n      /**\r\n       * Grayscale\r\n       * @see https://tailwindcss.com/docs/grayscale\r\n       */\n      grayscale: [{\n        grayscale: [grayscale]\n      }],\n\n      /**\r\n       * Hue Rotate\r\n       * @see https://tailwindcss.com/docs/hue-rotate\r\n       */\n      'hue-rotate': [{\n        'hue-rotate': [hueRotate]\n      }],\n\n      /**\r\n       * Invert\r\n       * @see https://tailwindcss.com/docs/invert\r\n       */\n      invert: [{\n        invert: [invert]\n      }],\n\n      /**\r\n       * Saturate\r\n       * @see https://tailwindcss.com/docs/saturate\r\n       */\n      saturate: [{\n        saturate: [saturate]\n      }],\n\n      /**\r\n       * Sepia\r\n       * @see https://tailwindcss.com/docs/sepia\r\n       */\n      sepia: [{\n        sepia: [sepia]\n      }],\n\n      /**\r\n       * Backdrop Filter\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://tailwindcss.com/docs/backdrop-filter\r\n       */\n      'backdrop-filter': [{\n        'backdrop-filter': ['', 'none']\n      }],\n\n      /**\r\n       * Backdrop Blur\r\n       * @see https://tailwindcss.com/docs/backdrop-blur\r\n       */\n      'backdrop-blur': [{\n        'backdrop-blur': [blur]\n      }],\n\n      /**\r\n       * Backdrop Brightness\r\n       * @see https://tailwindcss.com/docs/backdrop-brightness\r\n       */\n      'backdrop-brightness': [{\n        'backdrop-brightness': [brightness]\n      }],\n\n      /**\r\n       * Backdrop Contrast\r\n       * @see https://tailwindcss.com/docs/backdrop-contrast\r\n       */\n      'backdrop-contrast': [{\n        'backdrop-contrast': [contrast]\n      }],\n\n      /**\r\n       * Backdrop Grayscale\r\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\r\n       */\n      'backdrop-grayscale': [{\n        'backdrop-grayscale': [grayscale]\n      }],\n\n      /**\r\n       * Backdrop Hue Rotate\r\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\r\n       */\n      'backdrop-hue-rotate': [{\n        'backdrop-hue-rotate': [hueRotate]\n      }],\n\n      /**\r\n       * Backdrop Invert\r\n       * @see https://tailwindcss.com/docs/backdrop-invert\r\n       */\n      'backdrop-invert': [{\n        'backdrop-invert': [invert]\n      }],\n\n      /**\r\n       * Backdrop Opacity\r\n       * @see https://tailwindcss.com/docs/backdrop-opacity\r\n       */\n      'backdrop-opacity': [{\n        'backdrop-opacity': [opacity]\n      }],\n\n      /**\r\n       * Backdrop Saturate\r\n       * @see https://tailwindcss.com/docs/backdrop-saturate\r\n       */\n      'backdrop-saturate': [{\n        'backdrop-saturate': [saturate]\n      }],\n\n      /**\r\n       * Backdrop Sepia\r\n       * @see https://tailwindcss.com/docs/backdrop-sepia\r\n       */\n      'backdrop-sepia': [{\n        'backdrop-sepia': [sepia]\n      }],\n      // Tables\n\n      /**\r\n       * Border Collapse\r\n       * @see https://tailwindcss.com/docs/border-collapse\r\n       */\n      'border-collapse': [{\n        border: ['collapse', 'separate']\n      }],\n\n      /**\r\n       * Table Layout\r\n       * @see https://tailwindcss.com/docs/table-layout\r\n       */\n      'table-layout': [{\n        table: ['auto', 'fixed']\n      }],\n      // Transitions and Animation\n\n      /**\r\n       * Tranisition Property\r\n       * @see https://tailwindcss.com/docs/transition-property\r\n       */\n      transition: [{\n        transition: ['none', 'all', '', 'colors', 'opacity', 'shadow', 'transform', isArbitraryValue]\n      }],\n\n      /**\r\n       * Transition Duration\r\n       * @see https://tailwindcss.com/docs/transition-duration\r\n       */\n      duration: [{\n        duration: [isInteger]\n      }],\n\n      /**\r\n       * Transition Timing Function\r\n       * @see https://tailwindcss.com/docs/transition-timing-function\r\n       */\n      ease: [{\n        ease: ['linear', 'in', 'out', 'in-out', isArbitraryValue]\n      }],\n\n      /**\r\n       * Transition Delay\r\n       * @see https://tailwindcss.com/docs/transition-delay\r\n       */\n      delay: [{\n        delay: [isInteger]\n      }],\n\n      /**\r\n       * Animation\r\n       * @see https://tailwindcss.com/docs/animation\r\n       */\n      animate: [{\n        animate: ['none', 'spin', 'ping', 'pulse', 'bounce', isArbitraryValue]\n      }],\n      // Transforms\n\n      /**\r\n       * Transform\r\n       * @see https://tailwindcss.com/docs/transform\r\n       */\n      transform: [{\n        transform: ['', 'gpu', 'none']\n      }],\n\n      /**\r\n       * Scale\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\n      scale: [{\n        scale: [scale]\n      }],\n\n      /**\r\n       * Scale X\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\n      'scale-x': [{\n        'scale-x': [scale]\n      }],\n\n      /**\r\n       * Scale Y\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\n      'scale-y': [{\n        'scale-y': [scale]\n      }],\n\n      /**\r\n       * Rotate\r\n       * @see https://tailwindcss.com/docs/rotate\r\n       */\n      rotate: [{\n        rotate: [isInteger, isArbitraryValue]\n      }],\n\n      /**\r\n       * Translate X\r\n       * @see https://tailwindcss.com/docs/translate\r\n       */\n      'translate-x': [{\n        'translate-x': [translate]\n      }],\n\n      /**\r\n       * Translate Y\r\n       * @see https://tailwindcss.com/docs/translate\r\n       */\n      'translate-y': [{\n        'translate-y': [translate]\n      }],\n\n      /**\r\n       * Skew X\r\n       * @see https://tailwindcss.com/docs/skew\r\n       */\n      'skew-x': [{\n        'skew-x': [skew]\n      }],\n\n      /**\r\n       * Skew Y\r\n       * @see https://tailwindcss.com/docs/skew\r\n       */\n      'skew-y': [{\n        'skew-y': [skew]\n      }],\n\n      /**\r\n       * Transform Origin\r\n       * @see https://tailwindcss.com/docs/transform-origin\r\n       */\n      'transform-origin': [{\n        origin: ['center', 'top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', isArbitraryValue]\n      }],\n      // Interactivity\n\n      /**\r\n       * Accent Color\r\n       * @see https://tailwindcss.com/docs/accent-color\r\n       */\n      accent: [{\n        accent: ['auto', colors]\n      }],\n\n      /**\r\n       * Appearance\r\n       * @see https://tailwindcss.com/docs/appearance\r\n       */\n      appearance: ['appearance-none'],\n\n      /**\r\n       * Cursor\r\n       * @see https://tailwindcss.com/docs/cursor\r\n       */\n      cursor: [{\n        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryValue]\n      }],\n\n      /**\r\n       * Caret Color\r\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\r\n       */\n      'caret-color': [{\n        caret: [colors]\n      }],\n\n      /**\r\n       * Pointer Events\r\n       * @see https://tailwindcss.com/docs/pointer-events\r\n       */\n      'pointer-events': [{\n        'pointer-events': ['none', 'auto']\n      }],\n\n      /**\r\n       * Resize\r\n       * @see https://tailwindcss.com/docs/resize\r\n       */\n      resize: [{\n        resize: ['none', 'y', 'x', '']\n      }],\n\n      /**\r\n       * Scroll Behavior\r\n       * @see https://tailwindcss.com/docs/scroll-behavior\r\n       */\n      'scroll-behavior': [{\n        scroll: ['auto', 'smooth']\n      }],\n\n      /**\r\n       * Scroll Margin\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-m': [{\n        'scroll-m': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin X\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mx': [{\n        'scroll-mx': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin Y\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-my': [{\n        'scroll-my': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin Top\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mt': [{\n        'scroll-mt': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin Right\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mr': [{\n        'scroll-mr': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin Bottom\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mb': [{\n        'scroll-mb': [spacing]\n      }],\n\n      /**\r\n       * Scroll Margin Left\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-ml': [{\n        'scroll-ml': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-p': [{\n        'scroll-p': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding X\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-px': [{\n        'scroll-px': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding Y\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-py': [{\n        'scroll-py': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding Top\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pt': [{\n        'scroll-pt': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding Right\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pr': [{\n        'scroll-pr': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding Bottom\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pb': [{\n        'scroll-pb': [spacing]\n      }],\n\n      /**\r\n       * Scroll Padding Left\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pl': [{\n        'scroll-pl': [spacing]\n      }],\n\n      /**\r\n       * Scroll Snap Align\r\n       * @see https://tailwindcss.com/docs/scroll-snap-align\r\n       */\n      'snap-align': [{\n        snap: ['start', 'end', 'center', 'align-none']\n      }],\n\n      /**\r\n       * Scroll Snap Stop\r\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\r\n       */\n      'snap-stop': [{\n        snap: ['normal', 'always']\n      }],\n\n      /**\r\n       * Scroll Snap Type\r\n       * @see https://tailwindcss.com/docs/scroll-snap-type\r\n       */\n      'snap-type': [{\n        snap: ['none', 'x', 'y', 'both']\n      }],\n\n      /**\r\n       * Scroll Snap Type Strictness\r\n       * @see https://tailwindcss.com/docs/scroll-snap-type\r\n       */\n      'snap-strictness': [{\n        snap: ['mandatory', 'proximity']\n      }],\n\n      /**\r\n       * Touch Action\r\n       * @see https://tailwindcss.com/docs/touch-action\r\n       */\n      touch: [{\n        touch: ['auto', 'none', 'pinch-zoom', 'manipulation', {\n          pan: ['x', 'left', 'right', 'y', 'up', 'down']\n        }]\n      }],\n\n      /**\r\n       * User Select\r\n       * @see https://tailwindcss.com/docs/user-select\r\n       */\n      select: [{\n        select: ['none', 'text', 'all', 'auto']\n      }],\n\n      /**\r\n       * Will Change\r\n       * @see https://tailwindcss.com/docs/will-change\r\n       */\n      'will-change': [{\n        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryValue]\n      }],\n      // SVG\n\n      /**\r\n       * Fill\r\n       * @see https://tailwindcss.com/docs/fill\r\n       */\n      fill: [{\n        fill: [colors]\n      }],\n\n      /**\r\n       * Stroke Width\r\n       * @see https://tailwindcss.com/docs/stroke-width\r\n       */\n      'stroke-w': [{\n        stroke: [isLength]\n      }],\n\n      /**\r\n       * Stroke\r\n       * @see https://tailwindcss.com/docs/stroke\r\n       */\n      stroke: [{\n        stroke: [colors]\n      }],\n      // Accessibility\n\n      /**\r\n       * Screen Readers\r\n       * @see https://tailwindcss.com/docs/screen-readers\r\n       */\n      sr: ['sr-only', 'not-sr-only']\n    },\n    conflictingClassGroups: {\n      overflow: ['overflow-x', 'overflow-y'],\n      overscroll: ['overscroll-x', 'overscroll-y'],\n      inset: ['inset-x', 'inset-y', 'top', 'right', 'bottom', 'left'],\n      'inset-x': ['right', 'left'],\n      'inset-y': ['top', 'bottom'],\n      flex: ['basis', 'grow', 'shrink'],\n      'col-start-end': ['col-start', 'col-end'],\n      'row-start-end': ['row-start', 'row-end'],\n      gap: ['gap-x', 'gap-y'],\n      p: ['px', 'py', 'pt', 'pr', 'pb', 'pl'],\n      px: ['pr', 'pl'],\n      py: ['pt', 'pb'],\n      m: ['mx', 'my', 'mt', 'mr', 'mb', 'ml'],\n      mx: ['mr', 'ml'],\n      my: ['mt', 'mb'],\n      'font-size': ['leading'],\n      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],\n      'fvn-ordinal': ['fvn-normal'],\n      'fvn-slashed-zero': ['fvn-normal'],\n      'fvn-figure': ['fvn-normal'],\n      'fvn-spacing': ['fvn-normal'],\n      'fvn-fraction': ['fvn-normal'],\n      rounded: ['rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],\n      'rounded-t': ['rounded-tl', 'rounded-tr'],\n      'rounded-r': ['rounded-tr', 'rounded-br'],\n      'rounded-b': ['rounded-br', 'rounded-bl'],\n      'rounded-l': ['rounded-tl', 'rounded-bl'],\n      'border-w': ['border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n      'border-w-x': ['border-w-r', 'border-w-l'],\n      'border-w-y': ['border-w-t', 'border-w-b'],\n      'border-color': ['border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],\n      'border-color-x': ['border-color-r', 'border-color-l'],\n      'border-color-y': ['border-color-t', 'border-color-b'],\n      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],\n      'scroll-mx': ['scroll-mr', 'scroll-ml'],\n      'scroll-my': ['scroll-mt', 'scroll-mb'],\n      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],\n      'scroll-px': ['scroll-pr', 'scroll-pl'],\n      'scroll-py': ['scroll-pt', 'scroll-pb']\n    }\n  };\n}\n\nvar twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);\n\nconst _excluded$1l = [\"children\", \"href\", \"shape\", \"size\", \"variant\", \"color\", \"startIcon\", \"endIcon\", \"fullWidth\", \"responsive\", \"animation\", \"loading\", \"active\", \"disabled\", \"dataTheme\", \"className\", \"style\"];\nconst Button = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    children,\n    href,\n    shape,\n    size,\n    variant,\n    color,\n    startIcon,\n    endIcon,\n    fullWidth,\n    responsive,\n    animation = true,\n    loading,\n    active,\n    disabled,\n    dataTheme,\n    className,\n    style\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$1l);\n\n  const classes = twMerge('btn', className, clsx((startIcon && !loading || endIcon) && 'gap-2', {\n    [`btn-${size}`]: size,\n    [`btn-${shape}`]: shape,\n    [`btn-${variant}`]: variant,\n    [`btn-${color}`]: color,\n    'btn-block': fullWidth,\n    'btn-xs md:btn-sm lg:btn-md xl:btn-lg': responsive,\n    'no-animation': !animation,\n    'btn-active': active,\n    'btn-disabled': disabled,\n    loading: loading\n  }));\n\n  if (href) {\n    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"a\", {\n      className: classes,\n      style: style,\n      href: href,\n      children: [startIcon && startIcon, children, endIcon && endIcon]\n    });\n  } else {\n    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"button\", _extends$1({}, props, {\n      ref: ref,\n      \"data-theme\": dataTheme,\n      className: classes,\n      style: style,\n      disabled: disabled,\n      children: [startIcon && !loading && startIcon, children, endIcon && endIcon]\n    }));\n  }\n});\nButton.displayName = 'Button';\n\nconst _excluded$1k = [\"dataTheme\", \"className\"];\n\nconst DropdownMenu = _ref => {\n  let {\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$1k);\n\n  const classes = twMerge('dropdown-content menu p-2 shadow bg-base-100 rounded-box', className);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"ul\", _extends$1({}, props, {\n    tabIndex: 0,\n    \"data-theme\": dataTheme,\n    className: classes\n  }));\n};\n\nconst _excluded$1j = [\"className\"];\nconst DropdownItem = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$1j);\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"li\", {\n    className: className,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", _extends$1({\n      ref: ref\n    }, props))\n  });\n});\n\nconst _excluded$1i = [\"children\", \"color\", \"size\", \"button\", \"dataTheme\", \"className\", \"disabled\"];\n\nconst DropdownToggle = _ref => {\n  let {\n    children,\n    color,\n    size,\n    button = true,\n    dataTheme,\n    className,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$1i);\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"label\", _extends$1({\n    tabIndex: 0,\n    className: className\n  }, props, {\n    children: button ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Button, {\n      type: 'button',\n      dataTheme: dataTheme,\n      color: color,\n      size: size,\n      disabled: disabled,\n      children: children\n    }) : children\n  }));\n};\n\nconst _excluded$1h = [\"children\", \"className\", \"item\", \"horizontal\", \"vertical\", \"hover\", \"open\", \"dataTheme\"];\nconst Dropdown = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    children,\n    className,\n    item,\n    horizontal,\n    vertical,\n    hover,\n    open,\n    dataTheme\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$1h);\n\n  const classes = twMerge('dropdown', className, clsx({\n    [`dropdown-${horizontal}`]: horizontal,\n    [`dropdown-${vertical}`]: vertical,\n    'dropdown-hover': hover,\n    'dropdown-open': open\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", _extends$1({\n    role: \"listbox\"\n  }, props, {\n    ref: ref,\n    \"data-theme\": dataTheme,\n    className: classes,\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"label\", {\n      tabIndex: 0,\n      children: children\n    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"ul\", {\n      className: \"dropdown-content\",\n      children: item\n    })]\n  }));\n});\nvar Dropdown$1 = Object.assign(Dropdown, {\n  Toggle: DropdownToggle,\n  Menu: DropdownMenu,\n  Item: DropdownItem\n});\n\nconst _excluded$1g = [\"children\", \"className\"];\nconst ModalActions = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    children,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$1g);\n\n  const classes = twMerge('modal-action', className);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({}, props, {\n    className: classes,\n    ref: ref,\n    children: children\n  }));\n});\nModalActions.displayName = 'ModalActions';\n\nconst _excluded$1f = [\"children\", \"className\"];\nconst ModalBody = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    children,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$1f);\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({}, props, {\n    className: className,\n    ref: ref,\n    children: children\n  }));\n});\nModalBody.displayName = 'ModalBody';\n\nconst _excluded$1e = [\"children\", \"className\"];\nconst ModalHeader = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    children,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$1e);\n\n  const classes = twMerge('w-full mb-8 text-xl', className);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({}, props, {\n    className: classes,\n    ref: ref,\n    children: children\n  }));\n});\nModalHeader.displayName = 'ModalHeader';\n\nconst _excluded$1d = [\"children\", \"open\", \"responsive\", \"onClickBackdrop\", \"dataTheme\", \"className\"];\nconst Modal = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    children,\n    open,\n    responsive,\n    onClickBackdrop,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$1d);\n\n  const containerClasses = twMerge('modal', clsx({\n    'modal-open': open,\n    'modal-bottom sm:modal-middle': responsive\n  }));\n  const bodyClasses = twMerge('modal-box', className);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n    \"aria-label\": \"Modal\",\n    \"aria-hidden\": !open,\n    \"aria-modal\": open,\n    \"data-theme\": dataTheme,\n    className: containerClasses,\n    onClick: e => {\n      e.stopPropagation();\n\n      if (e.target === e.currentTarget) {\n        e.stopPropagation();\n\n        if (onClickBackdrop) {\n          onClickBackdrop();\n        }\n      }\n    },\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({}, props, {\n      \"data-theme\": dataTheme,\n      className: bodyClasses,\n      ref: ref,\n      children: children\n    }))\n  });\n});\nModal.displayName = 'Modal';\nvar Modal$1 = Object.assign(Modal, {\n  Header: ModalHeader,\n  Body: ModalBody,\n  Actions: ModalActions\n});\n\nconst isReactFragment = node => {\n  if (!node) return false;\n\n  if (node != null && node.type) {\n    return (node == null ? void 0 : node.type) === react__WEBPACK_IMPORTED_MODULE_1__.Fragment;\n  }\n\n  return node === react__WEBPACK_IMPORTED_MODULE_1__.Fragment;\n}; // Return true if a react element is valid and not a fragment\n// If a valid element is passed, add the props\n\nconst wrapWithElementIfInvalid = ({\n  node,\n  wrapper,\n  props: _props = {}\n}) => {\n  if (!node) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.cloneElement(wrapper, _props);\n  } else if (! /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.isValidElement(node)) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.cloneElement(wrapper, _props, node);\n  } else if (isReactFragment(node)) {\n    var _node$props;\n\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.cloneElement(wrapper, _extends$1({}, _props, {\n      className: twMerge((_node$props = node.props) == null ? void 0 : _node$props.className, _props == null ? void 0 : _props.className)\n    }), node.props.children);\n  } else {\n    var _node$props2;\n\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.cloneElement(node, _extends$1({}, _props, {\n      className: twMerge((_node$props2 = node.props) == null ? void 0 : _node$props2.className, _props == null ? void 0 : _props.className)\n    }));\n  }\n}; // Returns true if there is a single, string child element\n\nconst isSingleStringChild = children => {\n  return children && react__WEBPACK_IMPORTED_MODULE_1__.Children.count(children) === 1 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.isValidElement(children) && typeof children.props.children === 'string';\n};\n\nconst _excluded$1c = [\"onElement\", \"offElement\", \"active\", \"rotate\", \"flip\", \"dataTheme\", \"className\"];\nconst Swap = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    onElement,\n    offElement,\n    active,\n    rotate,\n    flip,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$1c);\n\n  const classes = twMerge('swap', className, clsx({\n    'swap-active': active,\n    'swap-rotate': rotate,\n    'swap-flip': flip\n  })); // These next two pieces allow classname to be added to valid elements, or wrap invalid elements with a div and the classname\n\n  const onEl = wrapWithElementIfInvalid({\n    node: onElement,\n    wrapper: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {}),\n    props: {\n      className: 'swap-on'\n    }\n  });\n  const offEl = wrapWithElementIfInvalid({\n    node: offElement,\n    wrapper: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {}),\n    props: {\n      className: 'swap-off'\n    }\n  });\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"label\", _extends$1({}, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    ref: ref,\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n      type: \"checkbox\"\n    }), onEl, offEl]\n  }));\n});\n\nconst _excluded$1b = [\"children\", \"icon\", \"status\", \"dataTheme\", \"className\", \"innerClassName\"];\nconst Alert = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    children,\n    icon,\n    status,\n    dataTheme,\n    className,\n    innerClassName\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$1b);\n\n  const classes = twMerge('alert', className, clsx({\n    [`alert-${status}`]: status\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({\n    role: \"alert\"\n  }, props, {\n    ref: ref,\n    \"data-theme\": dataTheme,\n    className: classes,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n      className: twMerge('flex-1', innerClassName),\n      children: [icon, children]\n    })\n  }));\n});\nAlert.displayName = 'Alert';\n\nconst _excluded$1a = [\"children\", \"space\", \"className\"];\nconst AvatarGroup = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    children,\n    space = -6,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$1a);\n\n  const spacingClassName = `${space < 0 ? '-' : ''}space-x-${Math.abs(space)}`;\n  const classes = clsx('avatar-group', spacingClassName, className);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({\n    \"aria-label\": `Group of ${children.length} avatar photos`\n  }, props, {\n    className: classes,\n    ref: ref,\n    children: children\n  }));\n});\n\nconst _excluded$19 = [\"size\", \"src\", \"letters\", \"shape\", \"color\", \"border\", \"borderColor\", \"online\", \"offline\", \"dataTheme\", \"className\", \"children\"];\nconst Avatar = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    size = 'md',\n    src,\n    letters,\n    shape,\n    color,\n    border,\n    borderColor,\n    online,\n    offline,\n    dataTheme,\n    className,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$19);\n\n  const containerClasses = twMerge('avatar', className, clsx({\n    online: online,\n    offline: offline,\n    placeholder: !src\n  }));\n  const imgClasses = clsx({\n    'ring ring-offset-base-100 ring-offset-2': border,\n    [`ring-${borderColor}`]: borderColor,\n    'rounded-btn': shape === 'square',\n    'rounded-full': shape === 'circle',\n    'w-32 h-32': size === 'lg',\n    'w-24 h-24': size === 'md',\n    'w-14 h-14': size === 'sm',\n    'w-10 h-10': size === 'xs'\n  });\n  const placeholderClasses = clsx({\n    'bg-neutral-focus': !color,\n    'text-neutral-content': !color,\n    [`bg-${color}`]: color,\n    [`text-${color}-content`]: color,\n    'ring ring-offset-base-100 ring-offset-2': border,\n    [`ring-${borderColor}`]: borderColor,\n    'rounded-btn': shape === 'square',\n    'rounded-full': shape === 'circle',\n    'w-32 h-32 text-3xl': size === 'lg',\n    'w-24 h-24 text-xl': size === 'md',\n    'w-14 h-14': size === 'sm',\n    'w-10 h-10': size === 'xs'\n  });\n  const customImgDimension = typeof size === 'number' ? {\n    width: size,\n    height: size\n  } : {};\n\n  const renderAvatarContents = () => {\n    // Base case, if src is provided, render img\n    if (src) {\n      return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n        className: imgClasses,\n        style: customImgDimension,\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", {\n          src: src\n        })\n      });\n    } // Render a text avatar if letters are provided, or a single child that is a string\n    else if (letters || isSingleStringChild(children)) {\n      return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n        className: placeholderClasses,\n        style: customImgDimension,\n        children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n          children: letters ? letters : children\n        })\n      });\n    } // Render if a single, not string child was provided (allows for SVGs) and merges classes and styles\n    else if (react__WEBPACK_IMPORTED_MODULE_1__.Children.count(children) === 1) {\n      const firstChild = react__WEBPACK_IMPORTED_MODULE_1__.Children.only(children);\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.cloneElement(firstChild, {\n        className: twMerge(imgClasses, firstChild.props.className),\n        style: _extends$1({}, customImgDimension, firstChild.props.style)\n      });\n    } // Render a wrapping div around all children if there is more than one child.\n    else {\n      return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n        className: imgClasses,\n        style: customImgDimension,\n        children: children\n      });\n    }\n  };\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({\n    \"aria-label\": \"Avatar photo\"\n  }, props, {\n    \"data-theme\": dataTheme,\n    className: containerClasses,\n    ref: ref,\n    children: renderAvatarContents()\n  }));\n});\nvar Avatar$1 = Object.assign(Avatar, {\n  Group: AvatarGroup\n});\n\nconst _excluded$18 = [\"children\", \"variant\", \"size\", \"color\", \"responsive\", \"dataTheme\", \"className\"];\nconst Badge = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    children,\n    variant,\n    size,\n    color,\n    responsive,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$18);\n\n  const classes = twMerge('badge', className, clsx({\n    [`badge-${size}`]: size,\n    [`badge-${variant}`]: variant,\n    [`badge-${color}`]: color,\n    'badge-xs md:badge-sm lg:badge-md xl:badge-lg': responsive\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({\n    \"aria-label\": \"Badge\"\n  }, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    ref: ref,\n    children: children\n  }));\n});\nBadge.displayName = 'Badge';\n\nconst _excluded$17 = [\"className\"];\nconst CardActions = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$17);\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({}, props, {\n    className: twMerge('card-actions', className),\n    ref: ref\n  }));\n});\n\nconst _excluded$16 = [\"className\"];\nconst CardBody = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$16);\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({}, props, {\n    className: twMerge('card-body', className),\n    ref: ref\n  }));\n});\n\nconst _excluded$15 = [\"className\", \"tag\"];\nconst CardTitle = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    className,\n    tag = 'div'\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$15);\n\n  const Tag = tag;\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Tag, _extends$1({}, props, {\n    className: twMerge('card-title', className),\n    ref: ref\n  }));\n});\n\nconst CardImage = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let props = _extends$1({}, _ref);\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"figure\", {\n    ref: ref,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", _extends$1({}, props))\n  });\n});\n\nconst _excluded$14 = [\"bordered\", \"imageFull\", \"normal\", \"compact\", \"side\", \"className\"];\nconst DYNAMIC_MODIFIERS$1 = {\n  compact: {\n    true: 'card-compact',\n    xs: 'xs:card-compact',\n    sm: 'sm:card-compact',\n    md: 'md:card-compact',\n    lg: 'lg:card-compact'\n  },\n  normal: {\n    true: 'card-normal',\n    xs: 'xs:card-normal',\n    sm: 'sm:card-normal',\n    md: 'md:card-normal',\n    lg: 'lg:card-normal'\n  },\n  side: {\n    true: 'card-side',\n    xs: 'xs:card-side',\n    sm: 'sm:card-side',\n    md: 'md:card-side',\n    lg: 'lg:card-side'\n  }\n};\nconst Card = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    bordered = true,\n    imageFull,\n    normal,\n    compact,\n    side,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$14);\n\n  const classes = twMerge('card', className, clsx({\n    'card-bordered': bordered,\n    'image-full': imageFull,\n    [compact && DYNAMIC_MODIFIERS$1.compact[compact.toString()] || '']: compact,\n    [normal && DYNAMIC_MODIFIERS$1.normal[normal.toString()] || '']: normal,\n    [side && DYNAMIC_MODIFIERS$1.side[side.toString()] || '']: side\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({\n    \"aria-label\": \"Card\"\n  }, props, {\n    className: classes,\n    ref: ref\n  }));\n});\nvar Card$1 = Object.assign(Card, {\n  Actions: CardActions,\n  Body: CardBody,\n  Title: CardTitle,\n  Image: CardImage\n});\n\nconst _excluded$13 = [\"children\", \"innerRef\", \"src\", \"alt\", \"index\", \"width\", \"hasButtons\", \"buttonStyle\", \"onPrev\", \"onNext\", \"className\"];\n\nconst CarouselItem = _ref => {\n  let {\n    children,\n    innerRef,\n    src,\n    alt,\n    index = 0,\n    width,\n    hasButtons,\n    buttonStyle,\n    onPrev,\n    onNext,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$13);\n\n  const classes = twMerge('carousel-item relative', className, clsx({\n    'w-full': width === 'full',\n    'w-1/2': width === 'half',\n    'h-full': true\n  }));\n  const imageClasses = clsx({\n    'w-full': width === 'full'\n  });\n\n  const renderButtons = () => {\n    if (buttonStyle != null) {\n      return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [/*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(buttonStyle('❮'), {\n          onClick: onPrev\n        }), /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(buttonStyle('❯'), {\n          onClick: onNext\n        })]\n      });\n    }\n\n    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Button, {\n        onClick: onPrev,\n        shape: \"circle\",\n        children: \"\\u276E\"\n      }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Button, {\n        onClick: onNext,\n        shape: \"circle\",\n        children: \"\\u276F\"\n      })]\n    });\n  };\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", _extends$1({}, props, {\n    id: `item${index}`,\n    ref: innerRef,\n    className: classes,\n    children: [src ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", {\n      src: src,\n      alt: alt,\n      className: imageClasses\n    }) : children, hasButtons && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n      className: \"absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2\",\n      children: renderButtons()\n    })]\n  }));\n};\n\nconst _excluded$12 = [\"children\", \"display\", \"snap\", \"vertical\", \"width\", \"buttonStyle\", \"dataTheme\", \"className\"];\nconst Carousel = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    children,\n    display = 'slider',\n    snap,\n    vertical,\n    width,\n    buttonStyle,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$12);\n\n  const classes = twMerge('carousel', className, clsx({\n    [`carousel-${snap}`]: snap,\n    'carousel-vertical': vertical,\n    'w-full': display !== 'slider'\n  }));\n  const [itemRefs, setItemRefs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n  const [activeIndex, setActiveIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const newRefs = [];\n    children.map(_ => {\n      newRefs.push( /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.createRef)());\n    });\n    setItemRefs(newRefs);\n  }, [children]);\n\n  const scrollToIndex = index => {\n    var _itemRefs$index$curre;\n\n    (_itemRefs$index$curre = itemRefs[index].current) == null ? void 0 : _itemRefs$index$curre.scrollIntoView({\n      behavior: 'smooth',\n      block: 'nearest',\n      inline: snap\n    });\n    setActiveIndex(index);\n  };\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({\n      role: \"listbox\",\n      \"aria-label\": \"Image carousel\"\n    }, props, {\n      ref: ref,\n      \"data-theme\": dataTheme,\n      className: classes,\n      children: children.map((child, i) => {\n        return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(child, _extends$1({\n          key: i,\n          innerRef: itemRefs[i],\n          index: i + 1,\n          children: child.props.children,\n          src: child.props.src,\n          alt: child.props.alt,\n          width: display !== 'slider' ? 'full' : width,\n          hasButtons: display === 'sequential',\n          buttonStyle,\n          onPrev: () => scrollToIndex(i - 1 < 0 ? children.length - 1 : i - 1),\n          onNext: () => scrollToIndex(i + 1 > children.length - 1 ? 0 : i + 1)\n        }, child.props));\n      })\n    })), display === 'numbered' && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n      className: \"flex justify-center w-full py-2 gap-2\",\n      children: children.map((_, i) => {\n        if (buttonStyle != null) {\n          return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(buttonStyle((i + 1).toString()), {\n            key: i,\n            onClick: () => scrollToIndex(i)\n          });\n        }\n\n        return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Button, {\n          active: i === activeIndex,\n          onClick: () => scrollToIndex(i),\n          children: i + 1\n        }, i);\n      })\n    })]\n  });\n});\nvar Carousel$1 = Object.assign(Carousel, {\n  Item: CarouselItem\n});\n\nconst _excluded$11 = [\"size\", \"shape\", \"className\"];\nconst ChatBubbleAvatar = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    size = 'xs',\n    shape = 'circle',\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$11);\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Avatar$1, _extends$1({\n    size: size,\n    shape: shape\n  }, props, {\n    className: twMerge('chat-image', className),\n    ref: ref\n  }));\n});\n\nconst _excluded$10 = [\"color\", \"className\"];\nconst ChatBubbleMessage = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    color,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$10);\n\n  const classes = twMerge('chat-bubble', clsx({\n    [`chat-bubble-${color}`]: color\n  }), className);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({}, props, {\n    className: classes,\n    ref: ref\n  }));\n});\n\nconst _excluded$$ = [\"className\"];\nconst ChatBubbleHeader = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$$);\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({}, props, {\n    className: twMerge('chat-header', className),\n    ref: ref\n  }));\n});\n\nconst _excluded$_ = [\"className\"];\nconst ChatBubbleTime = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$_);\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"time\", _extends$1({}, props, {\n    className: twMerge('text-xs opacity-50', className),\n    ref: ref\n  }));\n});\n\nconst _excluded$Z = [\"className\"];\nconst ChatBubbleFooter = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$Z);\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({}, props, {\n    className: twMerge('chat-footer opacity-50', className),\n    ref: ref\n  }));\n});\n\nconst _excluded$Y = [\"end\", \"color\", \"dataTheme\", \"className\", \"children\"];\nconst ChatBubble = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    end = false,\n    dataTheme,\n    className,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$Y);\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({}, props, {\n    \"data-theme\": dataTheme,\n    className: twMerge('chat', `chat-${end ? 'end' : 'start'}`, className),\n    ref: ref,\n    children: children\n  }));\n});\nChatBubble.displayName = 'ChatBubble';\nvar ChatBubble$1 = Object.assign(ChatBubble, {\n  Header: ChatBubbleHeader,\n  Time: ChatBubbleTime,\n  Avatar: ChatBubbleAvatar,\n  Message: ChatBubbleMessage,\n  Footer: ChatBubbleFooter\n});\n\nconst _excluded$X = [\"children\", \"className\"];\n\nconst CollapseTitle = _ref => {\n  let {\n    children,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$X);\n\n  const classes = twMerge('collapse-title', className);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({}, props, {\n    className: classes,\n    children: children\n  }));\n};\n\nconst _excluded$W = [\"children\", \"className\"];\n\nconst CollapseContent = _ref => {\n  let {\n    children,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$W);\n\n  const classes = twMerge('collapse-content', className);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({}, props, {\n    className: classes,\n    children: children\n  }));\n};\n\nconst _excluded$V = [\"children\", \"checkbox\", \"icon\", \"open\", \"dataTheme\", \"className\", \"onOpen\", \"onClose\", \"onToggle\"];\nconst Collapse = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    children,\n    checkbox,\n    icon,\n    open,\n    dataTheme,\n    className,\n    onOpen,\n    onClose,\n    onToggle\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$V);\n\n  const classes = twMerge('collapse', className, clsx({\n    [`collapse-${icon}`]: icon,\n    'collapse-open': open === true,\n    'collapse-close': open === false\n  }));\n  const [isChecked, setIsChecked] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(open);\n  const checkboxRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null); // Handle events for checkbox changes\n\n  const handleCheckboxChange = () => {\n    var _checkboxRef$current, _checkboxRef$current2, _checkboxRef$current3;\n\n    if (onToggle) {\n      onToggle();\n    }\n\n    if (onOpen && (_checkboxRef$current = checkboxRef.current) != null && _checkboxRef$current.checked) {\n      onOpen();\n    } else if (onClose && !((_checkboxRef$current2 = checkboxRef.current) != null && _checkboxRef$current2.checked)) {\n      onClose();\n    }\n\n    setIsChecked((_checkboxRef$current3 = checkboxRef.current) == null ? void 0 : _checkboxRef$current3.checked);\n  }; // Handle blur events, specifically handling open/close for non checkbox types\n\n\n  const handleBlur = event => {\n    if (!checkbox && onToggle) onToggle();\n    if (!checkbox && onClose) onClose();\n    if (props.onBlur) props.onBlur(event);\n  }; // Handle focus events, specifically handling open/close for non checkbox types\n\n\n  const handleFocus = event => {\n    if (!checkbox && onToggle) onToggle();\n    if (!checkbox && onOpen) onOpen();\n    if (props.onFocus) props.onFocus(event);\n  };\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", _extends$1({\n    \"aria-expanded\": open\n  }, props, {\n    ref: ref,\n    tabIndex: isChecked === true ? undefined : 0,\n    \"data-theme\": dataTheme,\n    className: classes,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    children: [checkbox && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n      type: \"checkbox\",\n      tabIndex: isChecked === true ? 0 : undefined,\n      className: \"peer\",\n      ref: checkboxRef,\n      onChange: handleCheckboxChange\n    }), children]\n  }));\n});\nvar Collapse$1 = Object.assign(Collapse, {\n  Title: CollapseTitle,\n  Content: CollapseContent\n});\n\nconst _excluded$U = [\"value\", \"dataTheme\", \"className\"];\n\nconst Countdown = _ref => {\n  let {\n    value,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$U);\n\n  const classes = twMerge('countdown', className);\n  const displayedValue = Math.min(99, Math.max(0, value));\n  const countdownStyle = {\n    '--value': displayedValue\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", _extends$1({\n    role: \"timer\"\n  }, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n      style: countdownStyle\n    })\n  }));\n};\n\nconst _excluded$T = [\"children\", \"size\", \"dataTheme\", \"className\"];\nconst Kbd = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    children,\n    size,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$T);\n\n  const classes = twMerge('kbd', className, clsx({\n    [`kbd-${size}`]: size\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"kbd\", _extends$1({}, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    ref: ref,\n    children: children\n  }));\n});\n\nconst _excluded$S = [\"color\", \"dataTheme\", \"className\"];\nconst Progress = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    color,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$S);\n\n  const classes = twMerge('progress', className, clsx({\n    [`progress-${color}`]: color\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"progress\", _extends$1({}, props, {\n    ref: ref,\n    \"data-theme\": dataTheme,\n    className: classes\n  }));\n});\nProgress.displayName = 'Progress';\n\nconst _excluded$R = [\"value\", \"size\", \"thickness\", \"color\", \"dataTheme\", \"className\", \"children\"];\nconst RadialProgress = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    value,\n    size = '4rem',\n    thickness = '4px',\n    color,\n    dataTheme,\n    className,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$R);\n\n  const classes = twMerge('radial-progress', className, clsx({\n    [`text-${color}`]: color\n  }));\n  const displayedValue = Math.min(100, Math.max(0, value));\n  const progressStyle = {\n    '--value': displayedValue,\n    '--size': size,\n    '--thickness': thickness\n  };\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({\n    role: \"progressbar\",\n    \"aria-valuenow\": displayedValue,\n    \"aria-valuemin\": 0,\n    \"aria-valuemax\": 100\n  }, props, {\n    ref: ref,\n    \"data-theme\": dataTheme,\n    className: classes,\n    style: progressStyle,\n    children: children\n  }));\n});\nRadialProgress.displayName = 'RadialProgress';\n\nconst _excluded$Q = [\"variant\", \"className\"];\nconst StatItem = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    variant,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$Q);\n\n  const classes = twMerge(className, clsx({\n    [`stat-${variant}`]: variant\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({}, props, {\n    className: classes,\n    ref: ref\n  }));\n});\n\nconst _excluded$P = [\"dataTheme\", \"className\"];\nconst Stat = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$P);\n\n  const classes = twMerge('stat', className);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({}, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    ref: ref\n  }));\n});\nvar Stat$1 = Object.assign(Stat, {\n  Item: StatItem\n});\n\nconst _excluded$O = [\"horizontal\", \"vertical\", \"dataTheme\", \"className\", \"children\"];\nconst Stats = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    horizontal,\n    vertical,\n    dataTheme,\n    className,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$O);\n\n  const classes = twMerge('stats', className, clsx({\n    'stats-horizontal': horizontal,\n    'stats-vertical': vertical\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({}, props, {\n    ref: ref,\n    \"data-theme\": dataTheme,\n    className: classes,\n    children: children\n  }));\n});\nvar Stats$1 = Object.assign(Stats, {\n  Stat: Stat$1\n});\n\nconst _excluded$N = [\"children\"];\nconst TableHead = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$N);\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"thead\", _extends$1({}, props, {\n    ref: ref,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"tr\", {\n      children: children == null ? void 0 : children.map((child, i) => {\n        return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"th\", {\n          children: child\n        }, i);\n      })\n    })\n  }));\n});\n\nconst _excluded$M = [\"children\"];\nconst TableBody = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$M);\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"tbody\", _extends$1({}, props, {\n    ref: ref,\n    children: children\n  }));\n});\n\nconst _excluded$L = [\"children\", \"active\", \"hover\", \"className\"];\nconst TableRow = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    children,\n    active,\n    hover,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$L);\n\n  const classes = twMerge(className, clsx({\n    active: active,\n    hover: hover\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"tr\", _extends$1({}, props, {\n    className: classes,\n    ref: ref,\n    children: children == null ? void 0 : children.map((child, i) => i < 1 ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"th\", {\n      children: child\n    }, i) : (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"td\", {\n      children: child\n    }, i))\n  }));\n});\n\nconst _excluded$K = [\"children\"];\nconst TableFooter = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$K);\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"tfoot\", _extends$1({}, props, {\n    ref: ref,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"tr\", {\n      children: children == null ? void 0 : children.map((child, i) => {\n        return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"th\", {\n          children: child\n        }, i);\n      })\n    })\n  }));\n});\n\nconst _excluded$J = [\"children\", \"compact\", \"zebra\", \"dataTheme\", \"className\"];\nconst Table = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    children,\n    compact,\n    zebra,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$J);\n\n  const classes = twMerge('table', className, clsx({\n    'table-zebra': zebra,\n    'table-compact': compact\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"table\", _extends$1({}, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    ref: ref,\n    children: children\n  }));\n});\nvar Table$1 = Object.assign(Table, {\n  Head: TableHead,\n  Body: TableBody,\n  Row: TableRow,\n  Footer: TableFooter\n});\n\nconst _excluded$I = [\"message\", \"children\", \"open\", \"color\", \"position\", \"dataTheme\", \"className\"];\nconst Tooltip = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    message,\n    children,\n    open,\n    color,\n    position,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$I);\n\n  const classes = twMerge('tooltip', className, clsx({\n    'tooltip-open': open,\n    [`tooltip-${color}`]: color,\n    'tooltip-top': position === 'top',\n    'tooltip-bottom': position === 'bottom',\n    'tooltip-left': position === 'left',\n    'tooltip-right': position === 'right'\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({\n    role: \"tooltip\"\n  }, props, {\n    ref: ref,\n    \"data-theme\": dataTheme,\n    \"data-tip\": message,\n    className: classes,\n    children: children\n  }));\n});\nTooltip.displayName = 'Tooltip';\n\nconst _excluded$H = [\"children\", \"title\", \"dataTheme\", \"className\"];\nconst Label = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    children,\n    title,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$H);\n\n  const classes = twMerge('label', className);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"label\", _extends$1({}, props, {\n    className: classes,\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n      className: \"label-text cursor-pointer\",\n      ref: ref,\n      children: title\n    }), children]\n  }));\n});\n\nconst _excluded$G = [\"children\", \"dataTheme\", \"className\"];\nconst Form = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    children,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$G);\n\n  const classes = twMerge('form-control', className);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"form\", _extends$1({\n    role: \"form\"\n  }, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    ref: ref,\n    children: children\n  }));\n});\nvar Form$1 = Object.assign(Form, {\n  Label\n});\n\nconst _excluded$F = [\"color\", \"size\", \"indeterminate\", \"dataTheme\", \"className\"];\nconst Checkbox = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    color,\n    size,\n    indeterminate,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$F);\n\n  const classes = twMerge('checkbox', className, clsx({\n    [`checkbox-${size}`]: size,\n    [`checkbox-${color}`]: color\n  }));\n  const checkboxRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(ref, () => checkboxRef.current);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (!checkboxRef.current) {\n      return;\n    }\n\n    if (indeterminate) {\n      checkboxRef.current.indeterminate = true;\n    } else {\n      checkboxRef.current.indeterminate = false;\n    }\n  }, [indeterminate]);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", _extends$1({}, props, {\n    ref: checkboxRef,\n    type: \"checkbox\",\n    \"data-theme\": dataTheme,\n    className: classes\n  }));\n});\nCheckbox.displayName = 'Checkbox';\n\nconst _excluded$E = [\"value\", \"placeholder\", \"bordered\", \"borderOffset\", \"size\", \"color\", \"dataTheme\", \"className\", \"type\"];\nconst Input = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    value,\n    placeholder,\n    bordered = true,\n    borderOffset,\n    size,\n    color,\n    dataTheme,\n    className,\n    type\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$E);\n\n  const classes = twMerge('input', className, clsx({\n    [`input-${size}`]: size,\n    [`input-${color}`]: color,\n    [`focus:outline-offset-0`]: !borderOffset,\n    'input-bordered': bordered\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", _extends$1({}, props, {\n    ref: ref,\n    type: type,\n    value: value,\n    placeholder: placeholder,\n    \"data-theme\": dataTheme,\n    className: classes\n  }));\n});\nInput.displayName = 'Input';\n\nconst _excluded$D = [\"color\", \"size\", \"name\", \"dataTheme\", \"className\"];\nconst Radio = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    color,\n    size,\n    name,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$D);\n\n  const classes = twMerge('radio', className, clsx({\n    [`radio-${size}`]: size,\n    [`radio-${color}`]: color\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", _extends$1({}, props, {\n    ref: ref,\n    type: \"radio\",\n    name: name,\n    \"data-theme\": dataTheme,\n    className: classes\n  }));\n});\nRadio.displayName = 'Radio';\n\nconst _excluded$C = [\"color\", \"size\", \"step\", \"dataTheme\", \"className\"];\nconst Range = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    color,\n    size,\n    step,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$C);\n\n  const classes = twMerge('range', className, clsx({\n    [`range-${size}`]: size,\n    [`range-${color}`]: color\n  }));\n\n  const isNumeric = n => !isNaN(parseFloat(n)) && isFinite(n);\n\n  const numSteps = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n    var _Math$ceil;\n\n    const safeStep = Math.max(1, Number(step));\n    return (_Math$ceil = Math.ceil(100 / safeStep)) != null ? _Math$ceil : 1;\n  }, [props.max, step]);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", _extends$1({}, props, {\n      ref: ref,\n      type: \"range\",\n      step: step,\n      \"data-theme\": dataTheme,\n      className: classes\n    })), isNumeric(step) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n      className: \"w-full flex justify-between text-xs px-2\",\n      children: [...Array(numSteps + 1)].map((_, i) => {\n        return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", {\n          children: \"|\"\n        }, i);\n      })\n    })]\n  });\n});\nRange.displayName = 'Range';\n\nconst RatingItem = _ref => {\n  let props = _extends$1({}, _ref);\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", _extends$1({}, props, {\n    type: \"checkbox\"\n  }));\n};\n\nconst _excluded$B = [\"children\", \"size\", \"half\", \"hidden\", \"dataTheme\", \"className\", \"value\", \"onChange\"];\nconst Rating = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    children,\n    size,\n    half,\n    hidden,\n    dataTheme,\n    className,\n    value,\n    onChange\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$B);\n\n  const classes = twMerge('rating', className, clsx({\n    [`rating-${size}`]: size,\n    'rating-half': half,\n    'rating-hidden': hidden || value === 0\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", _extends$1({\n    \"aria-label\": \"Rating\"\n  }, props, {\n    ref: ref,\n    \"data-theme\": dataTheme,\n    className: classes,\n    children: [value === 0 && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(RatingItem, {\n      className: clsx(classes, 'hidden'),\n      checked: true,\n      readOnly: true\n    }), react__WEBPACK_IMPORTED_MODULE_1__.Children.map(children, (child, index) => {\n      const childComponent = child;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.cloneElement(childComponent, {\n        key: index + value,\n        checked: value === index + 1,\n        readOnly: onChange == null,\n        onChange: () => {\n          onChange == null ? void 0 : onChange(index + 1);\n        }\n      });\n    })]\n  }));\n});\nvar Rating$1 = Object.assign(Rating, {\n  Item: RatingItem\n});\n\nconst _excluded$A = [\"children\"];\n\nconst SelectOption = _ref => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$A);\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"option\", _extends$1({}, props, {\n    children: children\n  }));\n};\n\nconst _excluded$z = [\"children\", \"size\", \"color\", \"bordered\", \"borderOffset\", \"dataTheme\", \"className\"];\n\nconst SelectInner = (props, ref) => {\n  const {\n    children,\n    size,\n    color,\n    bordered = true,\n    borderOffset,\n    dataTheme,\n    className\n  } = props,\n        rest = _objectWithoutPropertiesLoose(props, _excluded$z);\n\n  const classes = twMerge('select', className, clsx({\n    [`select-${size}`]: size,\n    [`select-${color}`]: color,\n    [`focus:outline-offset-0`]: !borderOffset,\n    'select-bordered': bordered\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"select\", _extends$1({}, rest, {\n    ref: ref,\n    \"data-theme\": dataTheme,\n    className: classes,\n    children: children\n  }));\n};\n\nconst Select = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(SelectInner);\nvar Select$1 = Object.assign(Select, {\n  Option: SelectOption\n});\n\nconst _excluded$y = [\"color\", \"size\", \"dataTheme\", \"className\"];\nconst Toggle = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    color,\n    size,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$y);\n\n  const classes = twMerge('toggle', className, clsx({\n    [`toggle-${size}`]: size,\n    [`toggle-${color}`]: color\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", _extends$1({}, props, {\n    ref: ref,\n    type: \"checkbox\",\n    \"data-theme\": dataTheme,\n    className: classes\n  }));\n});\nToggle.displayName = 'Toggle';\n\nconst _excluded$x = [\"bordered\", \"borderOffset\", \"color\", \"dataTheme\", \"className\"];\nconst Textarea = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    bordered = true,\n    borderOffset,\n    color,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$x);\n\n  const classes = twMerge('textarea', className, clsx({\n    [`textarea-${color}`]: color,\n    [`focus:outline-offset-0`]: !borderOffset,\n    'textarea-bordered': bordered\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"textarea\", _extends$1({}, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    ref: ref\n  }));\n});\n\nconst _excluded$w = [\"className\", \"size\", \"color\", \"bordered\", \"dataTheme\"];\nconst FileInput = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    className,\n    size,\n    color,\n    bordered,\n    dataTheme\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$w);\n\n  const classes = twMerge('file-input', className, clsx({\n    [`file-input-${size}`]: size,\n    [`file-input-${color}`]: color,\n    'file-input-bordered': bordered\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", _extends$1({}, props, {\n    ref: ref,\n    type: \"file\",\n    \"data-theme\": dataTheme,\n    className: classes\n  }));\n});\nFileInput.displayName = 'FileInput';\n\nconst _excluded$v = [\"children\", \"size\", \"horizontal\", \"dataTheme\", \"className\"];\nconst Artboard = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    children,\n    size,\n    horizontal,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$v);\n\n  const classes = twMerge('artboard', 'artboard-demo', className, clsx({\n    [`phone-${size}`]: size,\n    horizontal: horizontal\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({\n    \"aria-label\": \"Artboard\"\n  }, props, {\n    ref: ref,\n    \"data-theme\": dataTheme,\n    className: classes,\n    children: children\n  }));\n});\nArtboard.displayName = 'Artboard';\n\nconst _excluded$u = [\"vertical\", \"children\", \"dataTheme\", \"className\"];\nconst ButtonGroup = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    vertical,\n    children,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$u);\n\n  const classes = twMerge('btn-group', className, clsx({\n    'btn-group-vertical': vertical\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({\n    \"aria-label\": `Group of ${children.length} buttons`\n  }, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    ref: ref,\n    children: children\n  }));\n});\n\nconst _excluded$t = [\"children\", \"vertical\", \"dataTheme\", \"className\"];\n\nconst Divider = _ref => {\n  let {\n    children,\n    vertical,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$t);\n\n  const classes = twMerge('divider', className, clsx({\n    'divider-vertical': vertical\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({\n    role: \"separator\"\n  }, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    children: children\n  }));\n};\n\nconst _excluded$s = [\"children\", \"side\", \"open\", \"mobile\", \"end\", \"dataTheme\", \"className\", \"toggleClassName\", \"contentClassName\", \"sideClassName\", \"overlayClassName\", \"onClickOverlay\"];\n\nconst Drawer = _ref => {\n  let {\n    children,\n    side,\n    open,\n    mobile,\n    end,\n    dataTheme,\n    className,\n    toggleClassName,\n    contentClassName,\n    sideClassName,\n    overlayClassName,\n    onClickOverlay\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$s);\n\n  const classes = twMerge('drawer', className, clsx({\n    'drawer-mobile': mobile,\n    'drawer-end': end\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", _extends$1({\n    \"aria-expanded\": open\n  }, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", {\n      type: \"checkbox\",\n      className: clsx('drawer-toggle', toggleClassName),\n      checked: open,\n      readOnly: true\n    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n      className: clsx('drawer-content', contentClassName),\n      children: children\n    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n      className: clsx('drawer-side', sideClassName),\n      children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"label\", {\n        className: clsx('drawer-overlay', overlayClassName),\n        onClick: onClickOverlay\n      }), side]\n    })]\n  }));\n};\n\nconst _excluded$r = [\"className\"];\nconst FooterTitle = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$r);\n\n  const classes = twMerge('footer-title', className);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", _extends$1({}, props, {\n    className: classes,\n    ref: ref\n  }));\n});\n\nconst _excluded$q = [\"center\", \"dataTheme\", \"className\"];\nconst Footer = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    center,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$q);\n\n  const classes = twMerge('footer', className, clsx({\n    'footer-center': center\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({\n    role: \"contentinfo\"\n  }, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    ref: ref\n  }));\n});\nvar Footer$1 = Object.assign(Footer, {\n  Title: FooterTitle\n});\n\nconst _excluded$p = [\"dataTheme\", \"className\", \"children\"];\nconst HeroContent = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    dataTheme,\n    className,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$p);\n\n  const classes = twMerge('hero-content', className);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({}, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    ref: ref,\n    children: children\n  }));\n});\n\nconst _excluded$o = [\"dataTheme\", \"className\", \"children\"];\nconst HeroOverlay = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    dataTheme,\n    className,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$o);\n\n  const classes = twMerge('hero-overlay', className);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({}, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    ref: ref,\n    children: children\n  }));\n});\n\nconst _excluded$n = [\"dataTheme\", \"className\", \"children\"];\nconst Hero = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    dataTheme,\n    className,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$n);\n\n  const classes = twMerge('hero', className);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({\n    role: \"banner\"\n  }, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    ref: ref,\n    children: children\n  }));\n});\nvar Hero$1 = Object.assign(Hero, {\n  Content: HeroContent,\n  Overlay: HeroOverlay\n});\n\nconst _excluded$m = [\"children\", \"item\", \"horizontal\", \"vertical\", \"dataTheme\", \"className\", \"innerRef\"];\nconst Indicator = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    children,\n    item,\n    horizontal = 'end',\n    vertical = 'top',\n    dataTheme,\n    className,\n    innerRef\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$m);\n\n  const classes = twMerge('indicator-item', className, clsx({\n    [`indicator-${horizontal}`]: horizontal,\n    [`indicator-${vertical}`]: vertical\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", {\n    \"data-theme\": dataTheme,\n    className: \"indicator\",\n    ref: ref,\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({\n      \"aria-label\": \"Indicator\"\n    }, props, {\n      className: classes,\n      ref: innerRef,\n      children: item\n    })), children]\n  });\n});\n\nconst _excluded$l = [\"children\", \"size\", \"vertical\", \"dataTheme\", \"className\"];\nconst InputGroup = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    children,\n    size,\n    vertical,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$l);\n\n  const classes = twMerge('input-group', className, clsx({\n    [`input-group-${size}`]: size,\n    'input-group-vertical': vertical\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"label\", _extends$1({}, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    ref: ref,\n    children: children\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nconst _excluded$k = [\"src\", \"variant\", \"dataTheme\", \"className\"];\nconst Mask = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    src,\n    variant,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$k);\n\n  const classes = twMerge('mask', className, clsx({\n    [`mask-${variant}`]: variant\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"img\", _extends$1({}, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    src: src,\n    ref: ref\n  }));\n});\n\nconst _excluded$j = [\"dataTheme\", \"className\", \"children\"];\nconst Stack = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    dataTheme,\n    className,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$j);\n\n  const classes = twMerge('stack', className);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({\n    \"aria-label\": \"Stack\"\n  }, props, {\n    ref: ref,\n    \"data-theme\": dataTheme,\n    className: classes,\n    children: children\n  }));\n});\nStack.displayName = 'Stack';\n\nconst _excluded$i = [\"horizontal\", \"vertical\", \"className\", \"children\"];\nconst horizontalOptions = {\n  start: 'toast-start',\n  center: 'toast-center',\n  end: 'toast-end'\n};\nconst verticalOptions = {\n  top: 'toast-top',\n  middle: 'toast-middle',\n  bottom: 'toast-bottom'\n};\nconst Toast = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    horizontal = 'end',\n    vertical = 'bottom',\n    className,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$i);\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({}, props, {\n    className: twMerge('toast', horizontalOptions[horizontal], verticalOptions[vertical], className),\n    ref: ref,\n    children: children\n  }));\n});\nToast.displayName = 'Toast';\n\nconst _excluded$h = [\"children\", \"href\"];\nconst BreadcrumbsItem = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    children,\n    href\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$h);\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"li\", _extends$1({\n    role: \"link\"\n  }, props, {\n    ref: ref,\n    children: href ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", {\n      href: href,\n      children: children\n    }) : (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n      children: children\n    })\n  }));\n});\n\nconst _excluded$g = [\"children\", \"dataTheme\", \"className\", \"innerProps\", \"innerRef\"];\nconst Breadcrumbs = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    children,\n    dataTheme,\n    className,\n    innerProps,\n    innerRef\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$g);\n\n  const classes = twMerge('breadcrumbs', 'text-sm', className);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({\n    role: \"navigation\",\n    \"aria-label\": \"Breadcrumbs\"\n  }, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    ref: ref,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"ul\", _extends$1({}, innerProps, {\n      ref: innerRef,\n      children: children\n    }))\n  }));\n});\nvar Breadcrumbs$1 = Object.assign(Breadcrumbs, {\n  Item: BreadcrumbsItem\n});\n\nconst _excluded$f = [\"children\", \"className\"];\nconst BottomNavigationLabel = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    children,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$f);\n\n  const classes = twMerge('btm-nav-label', className);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", _extends$1({}, props, {\n    className: classes,\n    ref: ref,\n    children: children\n  }));\n});\n\nconst _excluded$e = [\"size\", \"dataTheme\", \"className\", \"children\"];\nconst BottomNavigation = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    size,\n    dataTheme,\n    className,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$e);\n\n  const classes = twMerge('btm-nav', clsx({\n    [`btm-nav-${size}`]: size\n  }), className);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({}, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    ref: ref,\n    children: children\n  }));\n});\nBottomNavigation.displayName = 'BottomNavigation';\nvar BottomNavigation$1 = Object.assign(BottomNavigation, {\n  Label: BottomNavigationLabel\n});\n\nconst _excluded$d = [\"children\", \"href\", \"color\", \"hover\", \"dataTheme\", \"className\"];\nconst Link = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    children,\n    href,\n    color,\n    hover = true,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$d);\n\n  const classes = twMerge('link', className, clsx({\n    [`link-${color}`]: color,\n    'link-hover': hover\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", _extends$1({\n    rel: \"noopener noreferrer\"\n  }, props, {\n    href: href,\n    \"data-theme\": dataTheme,\n    className: classes,\n    ref: ref,\n    children: children\n  }));\n});\nLink.displayName = 'Link';\n\nconst _excluded$c = [\"className\"];\nconst MenuTitle = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$c);\n\n  const classes = twMerge('menu-title', className);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"li\", _extends$1({}, props, {\n    className: classes,\n    ref: ref\n  }));\n});\n\nconst _excluded$b = [\"className\", \"disabled\"];\nconst MenuItem = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    className,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$b);\n\n  const classes = twMerge(className, clsx({\n    disabled: disabled\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"li\", _extends$1({\n    role: \"menuitem\",\n    className: classes\n  }, props, {\n    ref: ref\n  }));\n});\n\nconst _excluded$a = [\"normal\", \"compact\", \"horizontal\", \"vertical\", \"dataTheme\", \"className\"];\nconst DYNAMIC_MODIFIERS = {\n  compact: {\n    true: 'menu-compact',\n    xs: 'xs:menu-compact',\n    sm: 'sm:menu-compact',\n    md: 'md:menu-compact',\n    lg: 'lg:menu-compact'\n  },\n  normal: {\n    true: 'menu-normal',\n    xs: 'xs:menu-normal',\n    sm: 'sm:menu-normal',\n    md: 'md:menu-normal',\n    lg: 'lg:menu-normal'\n  },\n  horizontal: {\n    true: 'menu-horizontal',\n    xs: 'xs:menu-horizontal',\n    sm: 'sm:menu-horizontal',\n    md: 'md:menu-horizontal',\n    lg: 'lg:menu-horizontal'\n  },\n  vertical: {\n    true: 'menu-vertical',\n    xs: 'xs:menu-vertical',\n    sm: 'sm:menu-vertical',\n    md: 'md:menu-vertical',\n    lg: 'lg:menu-vertical'\n  }\n};\nconst Menu = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    normal,\n    compact,\n    horizontal,\n    vertical,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$a);\n\n  const classes = twMerge('menu', className, clsx({\n    [compact && DYNAMIC_MODIFIERS.compact[compact.toString()] || '']: compact,\n    [normal && DYNAMIC_MODIFIERS.normal[normal.toString()] || '']: normal,\n    [horizontal && DYNAMIC_MODIFIERS.horizontal[horizontal.toString()] || '']: horizontal,\n    [vertical && DYNAMIC_MODIFIERS.vertical[vertical.toString()] || '']: vertical\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"ul\", _extends$1({\n    role: \"menu\",\n    \"data-theme\": dataTheme,\n    className: classes\n  }, props, {\n    ref: ref\n  }));\n});\nvar Menu$1 = Object.assign(Menu, {\n  Title: MenuTitle,\n  Item: MenuItem\n});\n\nconst NavbarSection = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({\n  children,\n  section,\n  dataTheme,\n  className,\n  style\n}, ref) => {\n  const classes = twMerge(className, clsx({\n    ['flex-1']: section !== 'center',\n    [`navbar-${section}`]: section\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n    \"data-theme\": dataTheme,\n    className: classes,\n    style: style,\n    ref: ref,\n    children: children\n  });\n});\n\nconst _excluded$9 = [\"children\", \"dataTheme\", \"className\"];\nconst Navbar = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    children,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$9);\n\n  const classes = twMerge('navbar', className);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({\n    role: \"navigation\",\n    \"aria-label\": \"Navbar\"\n  }, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    ref: ref,\n    children: children\n  }));\n});\nconst NavbarStart = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((props, ref) => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NavbarSection, _extends$1({}, props, {\n  section: \"start\",\n  ref: ref\n})));\nconst NavbarCenter = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((props, ref) => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NavbarSection, _extends$1({}, props, {\n  section: \"center\",\n  ref: ref\n})));\nconst NavbarEnd = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((props, ref) => (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NavbarSection, _extends$1({}, props, {\n  section: \"end\",\n  ref: ref\n})));\nvar Navbar$1 = Object.assign(Navbar, {\n  Start: NavbarStart,\n  Center: NavbarCenter,\n  End: NavbarEnd\n});\n\nconst Pagination = ButtonGroup;\n\nconst _excluded$8 = [\"children\", \"value\", \"color\", \"dataTheme\", \"className\"];\nconst Step = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    children,\n    value,\n    color,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$8);\n\n  const classes = twMerge('step', className, clsx({\n    [`step-${color}`]: color\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"li\", _extends$1({\n    \"aria-label\": \"Step\"\n  }, props, {\n    \"data-theme\": dataTheme,\n    \"data-content\": value,\n    className: classes,\n    ref: ref,\n    children: children\n  }));\n});\n\nconst _excluded$7 = [\"children\", \"dataTheme\", \"className\", \"vertical\", \"horizontal\"];\nconst Steps = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    children,\n    dataTheme,\n    className,\n    vertical,\n    horizontal\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$7);\n\n  const classes = twMerge('steps', className, clsx({\n    ['steps-vertical']: vertical,\n    ['steps-horizontal']: horizontal\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"ul\", _extends$1({\n    \"aria-label\": \"Steps\",\n    role: \"group\"\n  }, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    ref: ref,\n    children: children\n  }));\n});\nvar Steps$1 = Object.assign(Steps, {\n  Step\n});\n\nconst _excluded$6 = [\"children\", \"value\", \"activeValue\", \"onClick\", \"size\", \"variant\", \"className\", \"style\"];\n\nconst TabInner = (_ref, ref) => {\n  let {\n    children,\n    value,\n    activeValue,\n    onClick,\n    size,\n    variant,\n    className,\n    style\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$6);\n\n  const classes = twMerge('tab', className, clsx({\n    'tab-active': value != null && value === activeValue,\n    [`tab-${size}`]: size,\n    [`tab-${variant}`]: variant\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", _extends$1({\n    role: \"tab\"\n  }, props, {\n    className: classes,\n    style: style,\n    onClick: () => onClick && onClick(value),\n    children: children\n  }));\n}; // Make forwardRef work with generic component\n\n\nconst Tab = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(TabInner);\n\nconst _excluded$5 = [\"children\", \"value\", \"onChange\", \"variant\", \"size\", \"boxed\", \"dataTheme\", \"className\"];\n\nconst TabsInner = (_ref, ref) => {\n  let {\n    children,\n    value,\n    onChange,\n    variant,\n    size,\n    boxed,\n    dataTheme,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$5);\n\n  const classes = twMerge('tabs', className, clsx({\n    'tabs-boxed': boxed\n  }));\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({\n    ref: ref,\n    role: \"tablist\"\n  }, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    children: children.map((child, index) => {\n      return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(child, {\n        key: child.props.value,\n        variant,\n        size,\n        activeValue: value,\n        onClick: value => {\n          onChange && onChange(value);\n        }\n      });\n    })\n  }));\n}; // Make forwardRef work with generic component\n\n\nconst Tabs = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(TabsInner);\nvar Tabs$1 = Object.assign(Tabs, {\n  Tab\n});\n\nconst _excluded$4 = [\"dataPrefix\", \"dataTheme\", \"status\", \"className\", \"children\", \"innerProps\", \"innerRef\"];\nconst CodeMockupLine = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    dataPrefix,\n    dataTheme,\n    status,\n    className,\n    children,\n    innerProps,\n    innerRef\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$4);\n\n  const classes = twMerge(clsx({\n    [`bg-${status}`]: status,\n    [`text-${status}-content`]: status\n  }), className);\n\n  const allProps = _extends$1({}, props, {\n    className: classes\n  }, dataPrefix !== false && {\n    'data-prefix': dataPrefix || '>'\n  });\n\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"pre\", _extends$1({}, allProps, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    ref: ref,\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"code\", _extends$1({}, innerProps, {\n      ref: innerRef,\n      children: children\n    }))\n  }));\n});\nCodeMockupLine.displayName = 'CodeMockup.Line';\n\nconst _excluded$3 = [\"dataTheme\", \"className\", \"children\"];\nconst CodeMockup = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    dataTheme,\n    className,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$3);\n\n  const classes = twMerge('mockup-code', className);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({\n    \"aria-label\": \"Code mockup\"\n  }, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    ref: ref,\n    children: react__WEBPACK_IMPORTED_MODULE_1__.Children.map(children, (child, index) => {\n      const childComponent = child;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.cloneElement(childComponent, {\n        key: index\n      });\n    })\n  }));\n});\nCodeMockup.displayName = 'CodeMockup';\nconst CodeMockupNamespace = Object.assign(CodeMockup, {\n  Line: CodeMockupLine\n});\n\nconst _excluded$2 = [\"color\", \"dataTheme\", \"className\", \"children\", \"innerRef\", \"innerProps\"];\nconst PhoneMockup = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    color,\n    dataTheme,\n    className,\n    children,\n    innerRef,\n    innerProps\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n\n  const classes = twMerge('mockup-phone', clsx({\n    [`border-${color}`]: color\n  }), className);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", _extends$1({\n    \"aria-label\": \"Phone mockup\"\n  }, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    ref: ref,\n    children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n      className: \"camera\"\n    }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n      className: \"display\",\n      children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({}, innerProps, {\n        className: twMerge('artboard artboard-demo phone-1', innerProps == null ? void 0 : innerProps.className),\n        ref: innerRef,\n        children: children\n      }))\n    })]\n  }));\n});\nPhoneMockup.displayName = 'PhoneMockup';\n\nconst defaultTheme = 'light';\n\nconst _excluded$1 = [\"border\", \"borderColor\", \"backgroundColor\", \"frameColor\", \"dataTheme\", \"className\", \"children\"];\nconst WindowMockup = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((_ref, ref) => {\n  let {\n    border,\n    borderColor,\n    backgroundColor,\n    frameColor,\n    dataTheme,\n    className,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n\n  // Set border color to framecolor or 'bg-base-300', if border color is not defined\n  const borderColorValue = borderColor ? borderColor : frameColor || 'base-300';\n  const classes = twMerge('mockup-window', border && `border border-${borderColorValue}`, clsx({\n    [`border-${borderColorValue}`]: borderColorValue,\n    [`bg-${frameColor}`]: frameColor\n  }), className); // If border is true, then we need to add the border-t and padding classes to the children\n  // if more than one child is passed in, or the single child is not a valid element, then we need to wrap the child/children in a div\n\n  const numChildren = react__WEBPACK_IMPORTED_MODULE_1__.Children.count(children);\n  const firstChild = numChildren > 0 && react__WEBPACK_IMPORTED_MODULE_1__.Children.toArray(children)[0]; // List of classes that child element will have\n\n  const innerClasses = clsx(backgroundColor && `bg-${backgroundColor}`, border && `border-t border-${borderColorValue}`, 'p-4'); // Add the innerClasses to the child element, merging classNames if existing, or wrapping with div and adding innerClasses\n\n  const innerEl = firstChild && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.isValidElement(firstChild) ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.cloneElement(firstChild, {\n    className: twMerge(innerClasses, firstChild.props.className)\n  }) : (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n    className: innerClasses,\n    children: children\n  });\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({\n    \"aria-label\": \"Window mockup\"\n  }, props, {\n    \"data-theme\": dataTheme,\n    className: classes,\n    ref: ref,\n    children: innerEl\n  }));\n});\nWindowMockup.displayName = 'WindowMockup';\n\nconst ThemeContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createContext({\n  theme: 'light',\n  setTheme: () => {}\n});\n\nconst getThemeFromClosestAncestor = ref => {\n  if (!ref.current) return;\n  const matches = ref.current.closest('[data-theme]');\n  if (matches) return matches.getAttribute('data-theme');\n};\n\nconst _excluded = [\"children\", \"dataTheme\", \"onChange\", \"className\"];\nconst Theme = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((_ref, ref) => {\n  let {\n    children,\n    dataTheme,\n    onChange,\n    className\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  // Either use provided ref or create a new ref\n  const themeRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(ref == null ? void 0 : ref.current);\n  const closestAncestorTheme = getThemeFromClosestAncestor(themeRef); // If no theme is provided, use the closest ancestor theme, if no ancestor theme, fallback to default theme (defined in constants)\n\n  const [theme, setTheme] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(dataTheme || closestAncestorTheme || defaultTheme);\n\n  const handleThemeChange = theme => {\n    // Fire custom onChange, if provided. ie, user provided function to store theme in session/local storage\n    onChange && onChange(theme); // Update state/context\n\n    setTheme(theme);\n  }; // Properly handle changes to theme prop on Theme component\n\n\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (dataTheme !== theme) {\n      dataTheme && handleThemeChange(dataTheme);\n    }\n  }, [dataTheme]);\n  return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ThemeContext.Provider, {\n    value: {\n      theme,\n      setTheme: handleThemeChange\n    },\n    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", _extends$1({}, props, {\n      \"data-theme\": theme,\n      className: className,\n      ref: themeRef,\n      children: children\n    }))\n  });\n});\n\nconst useTheme = value => {\n  const {\n    theme,\n    setTheme\n  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ThemeContext);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (value && theme !== value) {\n      setTheme(value);\n    }\n  }, [value]);\n  return {\n    theme,\n    setTheme\n  };\n};\n\n\n//# sourceMappingURL=react-daisyui.modern.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-daisyui/dist/react-daisyui.modern.js\n"));

/***/ })

});